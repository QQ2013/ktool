<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0054)http://blog.csdn.net/junjieguo/article/details/7678496 -->
<html xmlns="http://www.w3.org/1999/xhtml"><style type="text/css" id="__theworld_success_css"></style><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script async="" type="text/javascript" src="./ping_files/gpt.js"></script>   
    
     
    <script async="" src="./ping_files/analytics.js"></script><script type="text/javascript" src="./ping_files/tracking.js" charset="utf-8"></script>  

    <script type="text/javascript">
        var protocol = window.location.protocol;
        document.write('<script type="text/javascript" src="' + protocol + '//csdnimg.cn/pubfooter/js/repoAddr2.js?v=' + Math.random() + '"></' + 'script>');
    </script><script type="text/javascript" src="./ping_files/repoAddr2.js"></script>

     <script id="allmobilize" charset="utf-8" src="./ping_files/allmobilize.min.js"></script><style type="text/css"></style>
 <meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" media="handheld" href="http://blog.csdn.net/junjieguo/article/details/7678496#">

    <title>在linux中用C语言实现ping命令的部分功能 - 无心出岫
        - 博客频道 - CSDN.NET</title>
    
    <meta name="description" content="简介一个块设备驱动程序主要通过传输固定大小的随机数据来访问设备Linux内核视块设备为与字符设备相异的基本设备类型Linux块设备驱动程序接口使得块设备可以发挥其最大的功效，但是其复杂程序又是编程者必须面对的一个问题一个数据块指的是固定大小的数据，而大小的值由内核确定数据块的大小通常是4096个字节，但是可以根据体系结构和所使用的文件系统进行改变与数据块对应的是扇区，它是由底层硬件决定大小">
    <script src="./ping_files/jquery.js" type="text/javascript"></script>
    <script type="text/javascript" src="./ping_files/ad.js"></script>
        <!--new top-->
       
        <link rel="stylesheet" href="http://static.csdn.net/public/common/toolbar/css/index.css">
        <!--new top-->

    <link rel="Stylesheet" type="text/css" href="./ping_files/style.css">
    <link id="RSSLink" title="RSS" type="application/rss+xml" rel="alternate" href="http://blog.csdn.net/junjieguo/rss/list">
    <link rel="shortcut icon" href="http://c.csdnimg.cn/public/favicon.ico">
    <link type="text/css" rel="stylesheet" href="./ping_files/default.css">
 


<script src="./ping_files/share.js"></script><link rel="stylesheet" type="text/css" href="./ping_files/job_reco.css"><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Hover_Arrow {position: absolute; width: 15px; height: 11px; cursor: pointer}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; color: #666666}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_Menu_Close {position: absolute; width: 31px; height: 31px; top: -15px; left: -15px}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><link href="./ping_files/bdsstyle.css" rel="stylesheet" type="text/css"><script src="./ping_files/pubads_impl_74.js" async=""></script><script type="text/javascript" charset="utf-8" src="./ping_files/main.js"></script><script charset="utf-8" src="./ping_files/lightapp.js" data-appid="3629560" async="" name="baidu-tc-cerfication"></script><link rel="stylesheet" type="text/css" href="./ping_files/style(1).css"><link type="text/css" rel="stylesheet" href="./ping_files/style(2).css"><script src="./ping_files/logger.js"></script></head>
<body><div id="MathJax_Message" style="display: none;"></div><iframe frameborder="0" style="display: none;"></iframe>
    
   
      <!--new top-->
    <script id="toolbar-tpl-scriptId" fixed="true" prod="blog" skin="black" src="./ping_files/html.js" type="text/javascript"></script><div class="csdn-toolbar csdn-toolbar-skin-black ">        <div class="container row center-block ">          <div class="col-md-3 pull-left logo clearfix"><a href="http://www.csdn.net/?ref=toolbar" title="CSDN首页" target="_blank" class="icon"></a><a title="频道首页" href="http://blog.csdn.net/?ref=toolbar_logo" class="img blog-icon"></a></div>          <div class="pull-right login-wrap unlogin">            <ul class="btns">              <li class="loginlink"><a href="https://passport.csdn.net/account/login?ref=toolbar" target="_top">登录&nbsp;</a>|<a target="_top" href="http://passport.csdn.net/account/mobileregister?ref=toolbar&action=mobileRegister">&nbsp;注册</a></li>              <li class="search">                <div class="icon on-search-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <form action="http://so.csdn.net/search" method="get" target="_blank">                      <input type="hidden" value="toolbar" name="ref" accesskey="2">                      <div class="border">                        <input placeholder="搜索" type="text" value="" name="q" accesskey="2"><span class="icon-enter-sm"></span>                      </div>                    </form>                  </div>                </div>              </li>              <li class="favor">                <div class="icon on-favor-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div style="display:none;" class="favor-success"><span class="msg">收藏成功</span>                      <div class="btns"><span class="btn btn-primary ok">确定</span></div>                    </div>                    <div style="display:none;" class="favor-failed"><span class="icon-danger-lg"></span><span class="msg">收藏失败，请重新收藏</span>                      <div class="btns"><span class="btn btn-primary ok">确定</span></div>                    </div>                    <form role="form" class="form-horizontal favor-form">                      <div class="form-group">                        <div class="clearfix">                          <label for="input-title" class="col-sm-2 control-label">标题</label>                          <div class="col-sm-10">                            <input id="inputTitle" type="text" placeholder="" class="title form-control">                          </div>                        </div>                        <div class="alert alert-danger"><strong></strong>标题不能为空</div>                      </div>                      <div class="form-group">                        <label for="input-url" class="col-sm-2 control-label">网址</label>                        <div class="col-sm-10">                          <input id="input-url" type="text" placeholder="" class="url form-control">                        </div>                      </div>                      <div class="form-group">                        <label for="input-tag" class="col-sm-2 tag control-label">标签</label>                        <div class="col-sm-10">                          <input id="input-tag" type="text" class="form-control tag">                        </div>                      </div>                      <div class="form-group">                        <label for="input-description" class="description col-sm-2 control-label">摘要</label>                        <div class="col-sm-10">                          <textarea id="input-description" class="form-control description"></textarea>                        </div>                      </div>                      <div class="form-group">                        <div class="col-sm-offset-2 col-sm-10 ft">                          <div class="col-sm-4 pull-left">                            <div class="checkbox">                              <label>                                <input type="checkbox" name="share" checked="checked" class="share">公开                              </label>                            </div>                          </div>                          <div class="col-sm-8 pull-right favor-btns">                            <button type="button" class="cancel btn btn-default">取消</button>                            <button type="submit" class="submit btn btn-primary">收藏</button>                          </div>                        </div>                      </div>                    </form>                  </div>                </div>              </li>              <li class="notify">                <div style="display:none" class="number"></div>                <div style="display:none" class="icon-hasnotes-sm"></div>                <div id="header_notice_num"></div>                <div class="icon on-notify-icon">                  <div class="wrap">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div id="note1" class="csdn_note">                      <div class="box"></div>                    <iframe src="about:block" frameborder="0" allowtransparency="true" style="z-index:-1;position:absolute;top:0;left:0;width:100%;height:100%;background:transparent"></iframe></div>                  </div>                </div>              </li>              <li class="ugc">                <div class="icon on-ugc-icon">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <dl>                      <dt><a href="http://geek.csdn.net/news/expert?ref=toolbar" target="_blank" class="p-news clearfix" style="display:none;"><em class="icon"></em><span>分享资讯</span></a></dt>                      <dt><a href="http://u.download.csdn.net/upload?ref=toolbar" target="_blank" class="p-doc clearfix"><em class="icon"></em><span>传PPT/文档</span></a></dt>                      <dt><a href="http://bbs.csdn.net/topics/new?ref=toolbar" target="_blank" class="p-ask clearfix"><em class="icon"></em><span>提问题</span></a></dt>                      <dt><a href="http://write.blog.csdn.net/postedit?ref=toolbar" target="_blank" class="p-blog clearfix"><em class="icon"></em><span>写博客</span></a></dt>                      <dt><a href="http://u.download.csdn.net/upload?ref=toolbar" target="_blank" class="p-src clearfix"><em class="icon"></em><span>传资源</span></a></dt>                      <dt><a href="https://code.csdn.net/projects/new?ref=toolbar" target="_blank" class="c-obj clearfix"><em class="icon"></em><span>创建项目</span></a></dt>                      <dt><a href="https://code.csdn.net/snippets/new?ref=toolbar" target="_blank" class="c-code clearfix"><em class="icon"></em><span>创建代码片</span></a></dt>                    </dl>                  </div>                </div>              </li>              <li class="profile">                <div class="icon on-profile-icon"><img src="./ping_files/100x100.jpg" class="curr-icon-img">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                    <div class="bd">                      <dl class="clearfix">                        <dt class="pull-left img"><a target="_blank" href="http://my.csdn.net/?ref=toolbar" class="avatar"><img src="./ping_files/100x100.jpg"></a></dt>                        <dd class="info" style="border: none;"><a target="_blank" href="http://my.csdn.net/?ref=toolbar" class="nickname"></a><a class="set-nick" href="https://passport.csdn.net/account/profile">设置昵称<span class="write-icon"></span></a><span class="dec"><a class="fill-dec" href="http://my.csdn.net/" target="_blank">编辑自我介绍，让更多人了解你<span class="write-icon"></span></a></span></dd>                      </dl>                    </div>                    <div class="ft clearfix"><a target="_blank" href="http://my.csdn.net/my/account/changepwd?ref=toolbar" class="pull-left"><span class="icon-cog"></span>帐号设置</a><a href="https://passport.csdn.net/account/logout?ref=toolbar" target="_top" class="pull-left" style="margin-left:132px; width:18px; height:27px; white-space:nowrap; overflow:hidden;"><span class="icon-signout"></span><span class="out">退出</span></a></div>                  </div>                </div>              </li>              <li class="apps">                <div id="chasnew123" class="hasnew" style="display: none;"></div>                <div id="cappsarea123" class="icon on-apps-icon">                  <div class="wrap clearfix">                    <div class="curr-icon-wrap">                      <div class="curr-icon"></div>                    </div>                  <div class="detail">                    <dl>                      <dt>                        <h5>社区</h5>                      </dt>                      <dd> <a href="http://blog.csdn.net/?ref=toolbar" target="_blank">博客</a></dd>                      <dd> <a href="http://bbs.csdn.net/?ref=toolbar" target="_blank">论坛</a></dd>                      <dd> <a href="http://download.csdn.net/?ref=toolbar" target="_blank">下载</a></dd>                      <dd><a href="http://ask.csdn.net/?ref=toolbar" target="_blank">技术问答</a></dd>                      <dd><a href="http://geek.csdn.net/?ref=toolbar" target="_blank">极客头条</a></dd>                      <dd> <a href="http://hero.csdn.net/?ref=toolbar" target="_blank">英雄会</a></dd>                    </dl>                  </div>                  <div class="detail">                    <dl>                      <dt>                        <h5>服务</h5>                      </dt>                      <dd> <a href="http://job.csdn.net/?ref=toolbar" target="_blank">JOB<img src="./ping_files/new.gif" style="display: none; margin-top: -26px; width: 23px;"></a></dd>                      <dd> <a href="http://edu.csdn.net/?ref=toolbar" target="_blank">学院<img src="./ping_files/new.gif" style="display: none; margin-top: -26px; width: 23px;"></a></dd>                      <dd> <a href="https://code.csdn.net/?ref=toolbar" target="_blank">CODE</a></dd>                      <dd> <a href="http://huiyi.csdn.net/?ref=toolbar" target="_blank">活动</a></dd>                      <dd> <a href="http://www.csto.com/?ref=toolbar" target="_blank">CSTO</a></dd>                      <dd> <a href="http://mall.csdn.net/?ref=toolbar" target="_blank">C币兑换<img src="./ping_files/new.gif" style="display: none; margin-top: -26px; width: 23px;"></a></dd>                    </dl>                  </div>                  <div class="detail last">                    <dl>                      <dt>                        <h5>俱乐部</h5>                      </dt>                      <dd> <a href="http://cto.csdn.net/?ref=toolbar" target="_blank">CTO俱乐部</a></dd>                      <dd> <a href="http://student.csdn.net/?ref=toolbar" target="_blank">高校俱乐部</a></dd>                    </dl>                  </div>                </div>              </div>            </li>            </ul>          </div>        </div>    </div>
     <!--new top-->
    <div id="container">
        <div id="header">
    <div class="header">
        <div id="blog_title">
            <h2>
                <a href="http://blog.csdn.net/junjieguo">无心出岫</a></h2>
            <h3>Keep It Simple, Stupid.</h3>
            <div class="clear">
            </div>
        </div>
        <div class="clear">
        </div>
    </div>
</div>
<div id="navigator">
    <div class="navigator_bg">
    </div>
    <div class="navigator">
        <ul>
            
                <li id="btnContents"><a href="http://blog.csdn.net/junjieguo?viewmode=contents"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_mulu&#39;])">
                    <img src="./ping_files/ico_list.gif">目录视图</span></a></li>
                <li id="btnView"><a href="http://blog.csdn.net/junjieguo?viewmode=list"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_zhaiyao&#39;])">
                    <img src="./ping_files/ico_summary.gif">摘要视图</span></a></li>
                <li id="btnRss"><a href="http://blog.csdn.net/junjieguo/rss/list"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_RSS&#39;])">
                    <img src="./ping_files/ico_rss.gif">订阅</span></a></li>                

            </ul>
    </div>
</div>
<script type="text/javascript">
    var username = "junjieguo";
    var _blogger = username;
    var blog_address = "http://blog.csdn.net/junjieguo";
    var static_host = "http://static.blog.csdn.net";
    var currentUserName = "";  
</script>

        <div id="body">
            <div id="main">
                <div class="main">
                        <div class="ad_class">
<div class="notice tracking-ad" data-mod="popu_3"> 

<a href="http://bss.csdn.net/cview/reg/?project_id=2469&identy_id=1551" target="_blank">
<font color="red">最后一天！开发者有奖大调查
</font></a>
&nbsp;&nbsp;&nbsp;

<a href="http://bss.csdn.net/m/topic/learning_path_weixin" target="_blank">
<font color="blue">微信开发学习路线高级篇上线
</font></a>
&nbsp;&nbsp;&nbsp;
<a href="http://huiyi.csdn.net/activity/product/goods_list?project_id=2555" target="_blank">
<font color="red">Oracle 11g DataGuard深入探讨
</font></a>
&nbsp;&nbsp;&nbsp;
<a href="http://blog.csdn.net/v_july_v/article/details/49302193" target="_blank">
<font color="blue">恭喜July新书上市
</font></a>
</div>                        </div>
                        

  
<link href="./ping_files/comment1.css" type="text/css" rel="stylesheet">
<link href="./ping_files/style1.css" type="text/css" rel="stylesheet">
<script language="JavaScript" type="text/javascript" src="./ping_files/jquery.cookie.js"></script>
<script type="text/javascript" src="./ping_files/main(1).js"></script>
<link rel="stylesheet" href="http://static.blog.csdn.net/public/res-min/markdown_views.css?v=1.0">
<script type="text/javascript" src="./ping_files/MathJax.js"></script>

  <script type="text/ecmascript">
      window.quickReplyflag = true;
           
            var isBole = false;
            
          
    </script>
<div id="article_details" class="details">
    <div class="article_title">   
         <span class="ico ico_type_Original"></span>


    <h1>
        <span class="link_title"><a href="./ping_files/ping.htm">
        在linux中用C语言实现ping命令的部分功能            
        </a></span>
    </h1>
</div>

   

    <div class="article_manage">
        <span class="link_categories">
        分类：
            <a href="http://blog.csdn.net/junjieguo/article/category/1058315" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_fenlei&#39;]);">C语言</a> 
        </span>
    <span class="link_postdate">2012-06-20 08:37</span>
    <span class="link_view" title="阅读次数">4712人阅读</span>
    <span class="link_comments" title="评论次数"><a href="http://blog.csdn.net/junjieguo/article/details/7678496#comments" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_pinglun&#39;])">评论</a>(6)</span>
    <span class="link_collect"><a href="javascript:void(0);" onclick="javascript:collectArticle(&#39;在linux中用C语言实现ping命令的部分功能&#39;,&#39;7678496&#39;);return false;" title="收藏">收藏</a></span>
    <span class="link_report"><a href="http://blog.csdn.net/junjieguo/article/details/7678496#report" onclick="javascript:report(7678496,2);return false;" title="举报">举报</a></span>
    
</div>
<div class="tag2box"><a href="http://www.csdn.net/tag/linux" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">linux</a><a href="http://www.csdn.net/tag/%e8%af%ad%e8%a8%80" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">语言</a><a href="http://www.csdn.net/tag/c" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">c</a><a href="http://www.csdn.net/tag/struct" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">struct</a><a href="http://www.csdn.net/tag/statistics" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">statistics</a><a href="http://www.csdn.net/tag/socket" target="_blank" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_tag&#39;]);">socket</a></div>

  

  
  
     

<div id="article_content" class="article_content">

<p>&nbsp;运用C<span style="font-family:宋体">语言编写模拟常用网络命令</span><span style="font-family:Times New Roman">ping</span><span style="font-family:宋体">命令实现一个基于</span><span style="font-family:Times New Roman">linux</span><span style="font-family:宋体">原始套接字和</span><span style="font-family:Times New Roman">ICMP</span><span style="font-family:宋体">协议的</span><span style="font-family:Times New Roman">ping</span><span style="font-family:宋体">程序。该程序能用于检测主机或路由器工作是否正常。</span></p>
<p>程序中主要的函数</p>
<p>void&nbsp;alarm_handler(int); /*SIGALRM处理程序*/</p>
<p>void&nbsp;int_handler(int); /*SIGINT处理程序*/</p>
<p>void&nbsp;set_sighandler(); /*设置信号处理程序*/</p>
<p>void&nbsp;send_ping(); /*发送ping消息*/</p>
<p>void&nbsp;recv_reply(); /*接收ping应答*/</p>
<p>u16&nbsp;checksum(u8&nbsp;*buf,&nbsp;int&nbsp;len);&nbsp;/*计算校验和*/</p>
<p>int&nbsp;handle_pkt(); /*ICMP应答消息处理*/</p>
<p>void&nbsp;get_statistics(int,&nbsp;int); /*统计ping命令的检测结果*/</p>
<p>void&nbsp;bail(const&nbsp;char&nbsp;*); /*错误报告*/</p>
<p><span style="font-family:宋体">头文件：ping.h</span></p>
<p><span style="font-family:宋体"></span></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 389px; top: 781px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_1" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_1" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=1&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="preprocessor">#define&nbsp;ICMP_ECHOREPLY&nbsp;0&nbsp;/*&nbsp;Echo应答*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;ICMP_ECHO&nbsp;&nbsp;&nbsp;/*Echo请求*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#define&nbsp;BUFSIZE&nbsp;1500&nbsp;&nbsp;&nbsp;&nbsp;/*发送缓存最大值*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;DEFAULT_LEN&nbsp;56&nbsp;&nbsp;/**ping消息数据默认大小/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>/*数据类型别名*/&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">typedef</span><span>&nbsp;unsigned&nbsp;</span><span class="datatypes">char</span><span>&nbsp;u8;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">typedef</span><span>&nbsp;unsigned&nbsp;</span><span class="datatypes">short</span><span>&nbsp;u16;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">typedef</span><span>&nbsp;unsigned&nbsp;</span><span class="datatypes">int</span><span>&nbsp;u32;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*ICMP消息头部*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">struct</span><span>&nbsp;icmphdr&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;type;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*定义消息类型*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;code;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*定义消息代码*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;checksum;&nbsp;&nbsp;&nbsp;<span class="comment">/*定义校验*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">union</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;id;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;sequence;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}echo;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u32&nbsp;gateway;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;unsed;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;mtu;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}frag;&nbsp;<span class="comment">/*pmtu实现*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}un;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;<span class="comment">/*ICMP数据占位符*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;data[0];&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#define&nbsp;icmp_id&nbsp;un.echo.id</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;icmp_seq&nbsp;un.echo.sequence</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>};&nbsp;&nbsp;</span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;ICMP_HSIZE&nbsp;sizeof(struct&nbsp;icmphdr)</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="comment">/*定义一个IP消息头部结构体*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">struct</span><span>&nbsp;iphdr&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;hlen:4,&nbsp;ver:4;&nbsp;&nbsp;&nbsp;<span class="comment">/*定义4位首部长度，和IP版本号为IPV4*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;tos;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*8位服务类型TOS*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;tot_len;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*16位总长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;id;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*16位标志位*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;frag_off;&nbsp;&nbsp;&nbsp;<span class="comment">/*3位标志位*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;ttl;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*8位生存周期*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u8&nbsp;protocol;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*8位协议*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;check;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*16位IP首部校验和*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u32&nbsp;saddr;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*32位源IP地址*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u32&nbsp;daddr;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*32位目的IP地址*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>};&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="datatypes">char</span><span>&nbsp;*hostname;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*被ping的主机名*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="datatypes">int</span><span>&nbsp;datalen&nbsp;=&nbsp;DEFAULT_LEN;&nbsp;&nbsp;</span><span class="comment">/*ICMP消息携带的数据长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="datatypes">char</span><span>&nbsp;sendbuf[BUFSIZE];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*发送字符串数组*/</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="datatypes">char</span><span>&nbsp;recvbuf[BUFSIZE];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*接收字符串数组*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="datatypes">int</span><span>&nbsp;nsent;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*发送的ICMP消息序号*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="datatypes">int</span><span>&nbsp;nrecv;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*接收的ICMP消息序号*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>pid_t&nbsp;pid;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*ping程序的进程PID*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">struct</span><span>&nbsp;timeval&nbsp;recvtime;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*收到ICMP应答的时间戳*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="datatypes">int</span><span>&nbsp;sockfd;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*发送和接收原始套接字*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">struct</span><span>&nbsp;sockaddr_in&nbsp;dest;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*被ping的主机IP*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">struct</span><span>&nbsp;sockaddr_in&nbsp;from;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*发送ping应答消息的主机IP*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">struct</span><span>&nbsp;sigaction&nbsp;act_alarm;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">struct</span><span>&nbsp;sigaction&nbsp;act_int;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*函数原型*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;alarm_handler(</span><span class="datatypes">int</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*SIGALRM处理程序*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;int_handler(</span><span class="datatypes">int</span><span>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*SIGINT处理程序*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;set_sighandler();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*设置信号处理程序*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;send_ping();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*发送ping消息*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;recv_reply();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*接收ping应答*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>u16&nbsp;checksum(u8&nbsp;*buf,&nbsp;<span class="datatypes">int</span><span>&nbsp;len);&nbsp;</span><span class="comment">/*计算校验和*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="datatypes">int</span><span>&nbsp;handle_pkt();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*ICMP应答消息处理*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;get_statistics(</span><span class="datatypes">int</span><span>,&nbsp;</span><span class="datatypes">int</span><span>);&nbsp;&nbsp;</span><span class="comment">/*统计ping命令的检测结果*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;bail(</span><span class="keyword">const</span><span>&nbsp;</span><span class="datatypes">char</span><span>&nbsp;*);&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*错误报告*/</span><span>&nbsp;&nbsp;</span></span></li></ol></div><pre name="code" class="cpp" style="display: none;">#define ICMP_ECHOREPLY 0 /* Echo应答*/
#define ICMP_ECHO	/*Echo请求*/

#define BUFSIZE 1500	/*发送缓存最大值*/
#define DEFAULT_LEN 56  /**ping消息数据默认大小/

/*数据类型别名*/
typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;

/*ICMP消息头部*/
struct icmphdr {
    u8 type;     /*定义消息类型*/
    u8 code;	/*定义消息代码*/
    u16 checksum;	/*定义校验*/
    union{
    	struct{
	    u16 id;
	    u16 sequence;
	}echo;
	u32 gateway;
	struct{
 	    u16 unsed;
	    u16 mtu;
	}frag; /*pmtu实现*/
    }un;
  /*ICMP数据占位符*/
    u8 data[0];
#define icmp_id un.echo.id
#define icmp_seq un.echo.sequence
};
#define ICMP_HSIZE sizeof(struct icmphdr)
/*定义一个IP消息头部结构体*/
struct iphdr {
    u8 hlen:4, ver:4;	/*定义4位首部长度，和IP版本号为IPV4*/
    u8 tos;		/*8位服务类型TOS*/
    u16 tot_len;	/*16位总长度*/
    u16 id;			/*16位标志位*/
    u16 frag_off;	/*3位标志位*/
    u8 ttl;			/*8位生存周期*/
    u8 protocol;	/*8位协议*/
    u16 check;		/*16位IP首部校验和*/
    u32 saddr;		/*32位源IP地址*/
    u32 daddr;		/*32位目的IP地址*/
};

char *hostname;			/*被ping的主机名*/
int datalen = DEFAULT_LEN;	/*ICMP消息携带的数据长度*/
char sendbuf[BUFSIZE];		/*发送字符串数组*/	
char recvbuf[BUFSIZE];		/*接收字符串数组*/
int nsent;			/*发送的ICMP消息序号*/
int nrecv;			/*接收的ICMP消息序号*/
pid_t pid;			/*ping程序的进程PID*/
struct timeval recvtime;	/*收到ICMP应答的时间戳*/
int sockfd;			/*发送和接收原始套接字*/
struct sockaddr_in dest;	/*被ping的主机IP*/
struct sockaddr_in from;	/*发送ping应答消息的主机IP*/
struct sigaction act_alarm;
struct sigaction act_int;

/*函数原型*/
void alarm_handler(int);	/*SIGALRM处理程序*/
void int_handler(int);		/*SIGINT处理程序*/
void set_sighandler();		/*设置信号处理程序*/
void send_ping();		/*发送ping消息*/
void recv_reply();		/*接收ping应答*/
u16 checksum(u8 *buf, int len); /*计算校验和*/
int handle_pkt();		/*ICMP应答消息处理*/
void get_statistics(int, int);	/*统计ping命令的检测结果*/
void bail(const char *);	/*错误报告*/</pre><br>
<span style="font-family:宋体">源程序2：ping.c</span>
<p></p>
<p><span style="font-family:宋体"></span></p>
<div class="dp-highlighter bg_cpp"><div class="bar"><div class="tools"><b>[cpp]</b> <a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="ViewSource" title="view plain" onclick="dp.sh.Toolbar.Command(&#39;ViewSource&#39;,this);return false;">view plain</a><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="CopyToClipboard" title="copy" onclick="dp.sh.Toolbar.Command(&#39;CopyToClipboard&#39;,this);return false;">copy</a><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="PrintSource" title="print" onclick="dp.sh.Toolbar.Command(&#39;PrintSource&#39;,this);return false;">print</a><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="About" title="?" onclick="dp.sh.Toolbar.Command(&#39;About&#39;,this);return false;">?</a><div style="position: absolute; left: 389px; top: 2180px; width: 18px; height: 18px; z-index: 99;"><embed id="ZeroClipboardMovie_2" src="http://static.blog.csdn.net/scripts/ZeroClipboard/ZeroClipboard.swf" loop="false" menu="false" quality="best" bgcolor="#ffffff" width="18" height="18" name="ZeroClipboardMovie_2" align="middle" allowscriptaccess="always" allowfullscreen="false" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer" flashvars="id=2&amp;width=18&amp;height=18" wmode="transparent"></div></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="preprocessor">#include&lt;stdio.h&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&lt;stdlib.h&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&lt;sys/time.h&gt;&nbsp;&nbsp;/*是Linux系统的日期时间头文件*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&lt;unistd.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;/*　是POSIX标准定义的unix类系统定义符号常量的头文件，包含了许多UNIX系统服务的函数原型，例如read函数、write函数和getpid函数*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&lt;string.h&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&lt;sys/socket.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;/*对与引用socket函数必须*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&lt;sys/types.h&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&lt;netdb.h&gt;&nbsp;/*定义了与网络有关的结构，变量类型，宏，函数。函数gethostbyname()用*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&lt;errno.h&gt;&nbsp;/*sys/types.h中文名称为基本系统数据类型*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&lt;arpa/inet.h&gt;&nbsp;/*inet_ntoa()和inet_addr()这两个函数，包含在&nbsp;arpa/inet.h*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#include&lt;signal.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;/*进程对信号进行处理*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#include&lt;netinet/in.h&gt;&nbsp;&nbsp;&nbsp;&nbsp;/*互联网地址族*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="preprocessor">#include"ping.h"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="preprocessor">#define&nbsp;IP_HSIZE&nbsp;sizeof(struct&nbsp;iphdr)&nbsp;&nbsp;&nbsp;/*定义IP_HSIZE为ip头部长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="preprocessor">#define&nbsp;IPVERSION&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;/*定义IPVERSION为4，指出用ipv4*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">/*设置的时间是一个结构体，倒计时设置，重复倒时，超时值设为1秒*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">struct</span><span>&nbsp;itimerval&nbsp;val_alarm={.it_interval.tv_sec&nbsp;=&nbsp;1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.it_interval.tv_usec=0,&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.it_value.tv_sec=0,&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.it_value.tv_usec=1&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="datatypes">int</span><span>&nbsp;main(</span><span class="datatypes">int</span><span>&nbsp;argc,</span><span class="datatypes">char</span><span>&nbsp;**argv)&nbsp;&nbsp;</span><span class="comment">/*argc表示隐形程序命令行中参数的数目，argv是一个指向字符串数组指针，其中每一个字符对应一个参数*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>&nbsp;hostent&nbsp;*host;&nbsp;</span><span class="comment">/*该结构体属于include&lt;netdb.h&gt;*/</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">int</span><span>&nbsp;on&nbsp;=1;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(argc&lt;2){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*判断是否输入了地址*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="string">"Usage:&nbsp;%s&nbsp;hostname\n"</span><span>,argv[0]);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>((host=gethostbyname(argv[1]))==NULL){&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*gethostbyname()返回对应于给定主机名的包含主机名字和地址信息的结构指针,*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;perror(<span class="string">"can&nbsp;not&nbsp;understand&nbsp;the&nbsp;host&nbsp;name"</span><span>);&nbsp;&nbsp;&nbsp;</span><span class="comment">/*理解不了输入的地址*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hostname=argv[1];<span class="comment">/*取出地址名*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memset(&amp;dest,0,<span class="keyword">sizeof</span><span>&nbsp;dest);&nbsp;&nbsp;</span><span class="comment">/*将dest中前sizeof(dest)个字节替换为0并返回s,此处为初始化,给最大内存清零*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dest.sin_family=PF_INET;&nbsp;&nbsp;<span class="comment">/*PF_INET为IPV4，internet协议，在&lt;netinet/in.h&gt;中，地址族*/</span><span>&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dest.sin_port=ntohs(0);&nbsp;&nbsp;&nbsp;<span class="comment">/*端口号,ntohs()返回一个以主机字节顺序表达的数。*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dest.sin_addr=*(<span class="keyword">struct</span><span>&nbsp;in_addr&nbsp;*)host-&gt;h_addr_list[0];</span><span class="comment">/*host-&gt;h_addr_list[0]是地址的指针.返回IP地址，初始化*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>((sockfd&nbsp;=&nbsp;socket(PF_INET,SOCK_RAW,IPPROTO_ICMP))&lt;0){&nbsp;</span><span class="comment">/*PF_INEI套接字协议族，SOCK_RAW套接字类型，IPPROTO_ICMP使用协议，调用socket函数来创建一个能够进行网络通信的套接字。这里判断是否创建成功*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;perror(<span class="string">"raw&nbsp;socket&nbsp;created&nbsp;error"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setsockopt(sockfd,IPPROTO_IP,IP_HDRINCL,&amp;on,<span class="keyword">sizeof</span><span>(on));&nbsp;&nbsp;</span><span class="comment">/*设置当前套接字选项特定属性值，sockfd套接字，IPPROTO_IP协议层为IP层，IP_HDRINCL套接字选项条目，套接字接收缓冲区指针，sizeof(on)缓冲区长度的长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>setuid(getuid());<span class="comment">/*getuid()函数返回一个调用程序的真实用户ID,setuid()是让普通用户可以以root用户的角色运行只有root帐号才能运行的程序或命令。*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>pid=getpid();&nbsp;<span class="comment">/*getpid函数用来取得目前进程的进程识别码*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>set_sighandler();<span class="comment">/*对信号处理*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>printf(<span class="string">"Ping&nbsp;%s(%s):&nbsp;%d&nbsp;bytes&nbsp;data&nbsp;in&nbsp;ICMP&nbsp;packets.\n"</span><span>,&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;argv[1],inet_ntoa(dest.sin_addr),datalen);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>((setitimer(ITIMER_REAL,&amp;val_alarm,NULL))==-1)&nbsp;</span><span class="comment">/*定时函数*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bail(<span class="string">"setitimer&nbsp;fails."</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recv_reply();<span class="comment">/*接收ping应答*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;0;&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span><span class="comment">/*发送ping消息*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;send_ping(</span><span class="keyword">void</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>&nbsp;iphdr&nbsp;*ip_hdr;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*iphdr为IP头部结构体*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>&nbsp;icmphdr&nbsp;*icmp_hdr;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*icmphdr为ICMP头部结构体*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">int</span><span>&nbsp;len;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">int</span><span>&nbsp;len1;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*ip头部结构体变量初始化*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr=(<span class="keyword">struct</span><span>&nbsp;iphdr&nbsp;*)sendbuf;&nbsp;</span><span class="comment">/*字符串指针*/</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;hlen=<span class="keyword">sizeof</span><span>(</span><span class="keyword">struct</span><span>&nbsp;iphdr)&gt;&gt;2;&nbsp;&nbsp;</span><span class="comment">/*头部长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;ver=IPVERSION;&nbsp;&nbsp;&nbsp;<span class="comment">/*版本*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;tos=0;&nbsp;&nbsp;&nbsp;<span class="comment">/*服务类型*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;tot_len=IP_HSIZE+ICMP_HSIZE+datalen;&nbsp;<span class="comment">/*报文头部加数据的总长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;id=0;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*初始化报文标识*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;frag_off=0;&nbsp;&nbsp;<span class="comment">/*设置flag标记为0*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;protocol=IPPROTO_ICMP;<span class="comment">/*运用的协议为ICMP协议*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;ttl=255;&nbsp;<span class="comment">/*一个封包在网络上可以存活的时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hdr-&gt;daddr=dest.sin_addr.s_addr;&nbsp;&nbsp;<span class="comment">/*目的地址*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;len1=ip_hdr-&gt;hlen&lt;&lt;2;&nbsp;&nbsp;<span class="comment">/*ip数据长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*ICMP头部结构体变量初始化*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp_hdr=(<span class="keyword">struct</span><span>&nbsp;icmphdr&nbsp;*)(sendbuf+len1);&nbsp;&nbsp;</span><span class="comment">/*字符串指针*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp_hdr-&gt;type=8;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*初始化ICMP消息类型type*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp_hdr-&gt;code=0;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*初始化消息代码code*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp_hdr-&gt;icmp_id=pid;&nbsp;&nbsp;&nbsp;<span class="comment">/*把进程标识码初始给icmp_id*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp_hdr-&gt;icmp_seq=nsent++;&nbsp;&nbsp;<span class="comment">/*发送的ICMP消息序号赋值给icmp序号*/</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;memset(icmp_hdr-&gt;data,0xff,datalen);&nbsp;&nbsp;<span class="comment">/*将datalen中前datalen个字节替换为0xff并返回icmp_hdr-dat*/</span><span>&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;gettimeofday((<span class="keyword">struct</span><span>&nbsp;timeval&nbsp;*)icmp_hdr-&gt;data,NULL);&nbsp;</span><span class="comment">/*&nbsp;获取当前时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;len=ip_hdr-&gt;tot_len;&nbsp;<span class="comment">/*报文总长度赋值给len变量*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp_hdr-&gt;checksum=0;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*初始化*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp_hdr-&gt;checksum=checksum((u8&nbsp;*)icmp_hdr,len);&nbsp;&nbsp;<span class="comment">/*计算校验和*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;sendto(sockfd,sendbuf,len,0,(<span class="keyword">struct</span><span>&nbsp;sockaddr&nbsp;*)&amp;dest,</span><span class="keyword">sizeof</span><span>&nbsp;(dest));&nbsp;</span><span class="comment">/*经socket传送数据*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*接收程序发出的ping命令的应答*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;recv_reply()&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">int</span><span>&nbsp;n,len;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">int</span><span>&nbsp;errno;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;n=nrecv=0;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;len=<span class="keyword">sizeof</span><span>(from);&nbsp;&nbsp;&nbsp;</span><span class="comment">/*发送ping应答消息的主机IP*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>(nrecv&lt;4){&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>((n=recvfrom(sockfd,recvbuf,</span><span class="keyword">sizeof</span><span>&nbsp;recvbuf,0,(</span><span class="keyword">struct</span><span>&nbsp;sockaddr&nbsp;*)&amp;from,&amp;len))&lt;0){&nbsp;</span><span class="comment">/*经socket接收数据,如果正确接收返回接收到的字节数，失败返回0.*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(errno==EINTR)&nbsp;&nbsp;</span><span class="comment">/*EINTR表示信号中断*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">continue</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bail(<span class="string">"recvfrom&nbsp;error"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gettimeofday(&amp;recvtime,NULL);&nbsp;&nbsp;&nbsp;<span class="comment">/*记录收到应答的时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(handle_pkt())&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment">/*接收到错误的ICMP应答信息*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">continue</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nrecv++;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;get_statistics(nsent,nrecv);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*统计ping命令的检测结果*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;<span class="comment">/*计算校验和*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>u16&nbsp;checksum(u8&nbsp;*buf,<span class="datatypes">int</span><span>&nbsp;len)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;u32&nbsp;sum=0;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;*cbuf;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;cbuf=(u16&nbsp;*)buf;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>(len&gt;1){&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;sum+=*cbuf++;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;len-=2;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(len)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum+=*(u8&nbsp;*)cbuf;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=(sum&gt;&gt;16)+(sum&nbsp;&amp;&nbsp;0xffff);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum+=(sum&gt;&gt;16);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;~sum;&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;<span class="comment">/*ICMP应答消息处理*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="datatypes">int</span><span>&nbsp;handle_pkt()&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>&nbsp;iphdr&nbsp;*ip;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>&nbsp;icmphdr&nbsp;*icmp;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">int</span><span>&nbsp;ip_hlen;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;u16&nbsp;ip_datalen;&nbsp;<span class="comment">/*ip数据长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="datatypes">double</span><span>&nbsp;rtt;&nbsp;</span><span class="comment">/*&nbsp;往返时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">struct</span><span>&nbsp;timeval&nbsp;*sendtime;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ip=(<span class="keyword">struct</span><span>&nbsp;iphdr&nbsp;*)recvbuf;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_hlen=ip-&gt;hlen&nbsp;&lt;&lt;&nbsp;2;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;ip_datalen=ntohs(ip-&gt;tot_len)-ip_hlen;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;icmp=(<span class="keyword">struct</span><span>&nbsp;icmphdr&nbsp;*)(recvbuf+ip_hlen);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(checksum((u8&nbsp;*)icmp,ip_datalen))&nbsp;</span><span class="comment">/*计算校验和*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;-1;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(icmp-&gt;icmp_id!=pid)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;-1;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sendtime=(<span class="keyword">struct</span><span>&nbsp;timeval&nbsp;*)icmp-&gt;data;&nbsp;</span><span class="comment">/*发送时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rtt=((&amp;recvtime)-&gt;tv_sec-sendtime-&gt;tv_sec)*1000+((&amp;recvtime)-&gt;tv_usec-sendtime-&gt;tv_usec)/1000.0;<span class="comment">/*&nbsp;往返时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*打印结果*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="string">"%d&nbsp;bytes&nbsp;from&nbsp;%s:icmp_seq=%u&nbsp;ttl=%d&nbsp;rtt=%.3f&nbsp;ms\n"</span><span>,&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip_datalen,&nbsp;<span class="comment">/*IP数据长度*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inet_ntoa(from.sin_addr),&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*目的ip地址*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;icmp-&gt;icmp_seq,&nbsp;<span class="comment">/*icmp报文序列号*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip-&gt;ttl,&nbsp;&nbsp;<span class="comment">/*生存时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rtt);&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*往返时间*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;0;&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span><span class="comment">/*设置信号处理程序*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;set_sighandler()&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;act_alarm.sa_handler=alarm_handler;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(sigaction(SIGALRM,&amp;act_alarm,NULL)==-1)&nbsp;&nbsp;</span><span class="comment">/*sigaction()会依参数signum指定的信号编号来设置该信号的处理函数。参数signum指所要捕获信号或忽略的信号，&amp;act代表新设置的信号共用体，NULL代表之前设置的信号处理结构体。这里判断对信号的处理是否成功。*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bail(<span class="string">"SIGALRM&nbsp;handler&nbsp;setting&nbsp;fails."</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;act_int.sa_handler=int_handler;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">if</span><span>(sigaction(SIGINT,&amp;act_int,NULL)==-1)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bail(<span class="string">"SIGALRM&nbsp;handler&nbsp;setting&nbsp;fails."</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;<span class="comment">/*统计ping命令的检测结果*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;get_statistics(</span><span class="datatypes">int</span><span>&nbsp;nsent,</span><span class="datatypes">int</span><span>&nbsp;nrecv)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="string">"---&nbsp;%s&nbsp;ping&nbsp;statistics&nbsp;---\n"</span><span>,inet_ntoa(dest.sin_addr));&nbsp;</span><span class="comment">/*将网络地址转换成“.”点隔的字符串格式。*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;printf(<span class="string">"%d&nbsp;packets&nbsp;transmitted,&nbsp;%d&nbsp;received,&nbsp;%0.0f%%&nbsp;"</span><span class="string">"packet&nbsp;loss\n"</span><span>,&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nsent,nrecv,1.0*(nsent-nrecv)/nsent*100);&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;<span class="comment">/*错误报告*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;bail(</span><span class="keyword">const</span><span>&nbsp;</span><span class="datatypes">char</span><span>&nbsp;*&nbsp;on_what)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;fputs(strerror(errno),stderr);&nbsp;&nbsp;<span class="comment">/*:向指定的文件写入一个字符串（不写入字符串结束标记符‘\0’）。成功写入一个字符串后，文件的位置指针会自动后移，函数返回值为0；否则返回EOR(符号常量，其值为-1)。*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;fputs(<span class="string">":"</span><span>,stderr);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;fputs(on_what,stderr);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;fputc(<span class="string">'\n'</span><span>,stderr);&nbsp;</span><span class="comment">/*送一个字符到一个流中*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;<span class="comment">/*SIGINT（中断信号）处理程序*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">void</span><span>&nbsp;int_handler(</span><span class="datatypes">int</span><span>&nbsp;sig)&nbsp;&nbsp;</span></span></li><li class="alt"><span>{&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;get_statistics(nsent,nrecv);&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*统计ping命令的检测结果*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;close(sockfd);&nbsp;&nbsp;<span class="comment">/*关闭网络套接字*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;exit(1);&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;<span class="comment">/*SIGALRM（终止进程）处理程序*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">void</span><span>&nbsp;alarm_handler(</span><span class="datatypes">int</span><span>&nbsp;signo)&nbsp;&nbsp;</span></span></li><li class=""><span>{&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;send_ping();&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/*发送ping消息*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol></div><pre name="code" class="cpp" style="display: none;">#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;sys/time.h&gt;	/*是Linux系统的日期时间头文件*/
#include&lt;unistd.h&gt;	/*　是POSIX标准定义的unix类系统定义符号常量的头文件，包含了许多UNIX系统服务的函数原型，例如read函数、write函数和getpid函数*/
#include&lt;string.h&gt;
#include&lt;sys/socket.h&gt;	/*对与引用socket函数必须*/
#include&lt;sys/types.h&gt;
#include&lt;netdb.h&gt;	/*定义了与网络有关的结构，变量类型，宏，函数。函数gethostbyname()用*/
#include&lt;errno.h&gt;	/*sys/types.h中文名称为基本系统数据类型*/
#include&lt;arpa/inet.h&gt;	/*inet_ntoa()和inet_addr()这两个函数，包含在 arpa/inet.h*/
#include&lt;signal.h&gt;	/*进程对信号进行处理*/
#include&lt;netinet/in.h&gt;	/*互联网地址族*/

#include"ping.h"
#define IP_HSIZE sizeof(struct iphdr)   /*定义IP_HSIZE为ip头部长度*/
#define IPVERSION  4   /*定义IPVERSION为4，指出用ipv4*/
/*设置的时间是一个结构体，倒计时设置，重复倒时，超时值设为1秒*/
struct itimerval val_alarm={.it_interval.tv_sec = 1,	
                               .it_interval.tv_usec=0,
                               .it_value.tv_sec=0,
                               .it_value.tv_usec=1
                                };

int main(int argc,char **argv)	/*argc表示隐形程序命令行中参数的数目，argv是一个指向字符串数组指针，其中每一个字符对应一个参数*/
{
    struct hostent *host; /*该结构体属于include&lt;netdb.h&gt;*/ 
    int on =1;

    if(argc&lt;2){		/*判断是否输入了地址*/
    printf("Usage: %s hostname\n",argv[0]);
    exit(1);
    }

    if((host=gethostbyname(argv[1]))==NULL){	/*gethostbyname()返回对应于给定主机名的包含主机名字和地址信息的结构指针,*/
      perror("can not understand the host name"); 	/*理解不了输入的地址*/
      exit(1);
      }

      hostname=argv[1];/*取出地址名*/

      memset(&amp;dest,0,sizeof dest);	/*将dest中前sizeof(dest)个字节替换为0并返回s,此处为初始化,给最大内存清零*/
      dest.sin_family=PF_INET;	/*PF_INET为IPV4，internet协议，在&lt;netinet/in.h&gt;中，地址族*/ 
      dest.sin_port=ntohs(0);	/*端口号,ntohs()返回一个以主机字节顺序表达的数。*/
      dest.sin_addr=*(struct in_addr *)host-&gt;h_addr_list[0];/*host-&gt;h_addr_list[0]是地址的指针.返回IP地址，初始化*/

      if((sockfd = socket(PF_INET,SOCK_RAW,IPPROTO_ICMP))&lt;0){ /*PF_INEI套接字协议族，SOCK_RAW套接字类型，IPPROTO_ICMP使用协议，调用socket函数来创建一个能够进行网络通信的套接字。这里判断是否创建成功*/
          perror("raw socket created error");
          exit(1);
       }

       setsockopt(sockfd,IPPROTO_IP,IP_HDRINCL,&amp;on,sizeof(on));  /*设置当前套接字选项特定属性值，sockfd套接字，IPPROTO_IP协议层为IP层，IP_HDRINCL套接字选项条目，套接字接收缓冲区指针，sizeof(on)缓冲区长度的长度*/

setuid(getuid());/*getuid()函数返回一个调用程序的真实用户ID,setuid()是让普通用户可以以root用户的角色运行只有root帐号才能运行的程序或命令。*/
pid=getpid(); /*getpid函数用来取得目前进程的进程识别码*/

set_sighandler();/*对信号处理*/
printf("Ping %s(%s): %d bytes data in ICMP packets.\n",
       argv[1],inet_ntoa(dest.sin_addr),datalen);

       if((setitimer(ITIMER_REAL,&amp;val_alarm,NULL))==-1)	/*定时函数*/
          bail("setitimer fails.");


          recv_reply();/*接收ping应答*/

          return 0;
}
/*发送ping消息*/
void send_ping(void)
{
    struct iphdr *ip_hdr;	/*iphdr为IP头部结构体*/
    struct icmphdr *icmp_hdr;	/*icmphdr为ICMP头部结构体*/
    int len;
    int len1;
		/*ip头部结构体变量初始化*/
    ip_hdr=(struct iphdr *)sendbuf;	/*字符串指针*/	
    ip_hdr-&gt;hlen=sizeof(struct iphdr)&gt;&gt;2;	/*头部长度*/
    ip_hdr-&gt;ver=IPVERSION;	/*版本*/
    ip_hdr-&gt;tos=0;	/*服务类型*/
    ip_hdr-&gt;tot_len=IP_HSIZE+ICMP_HSIZE+datalen;	/*报文头部加数据的总长度*/
    ip_hdr-&gt;id=0;	/*初始化报文标识*/
    ip_hdr-&gt;frag_off=0;	/*设置flag标记为0*/
    ip_hdr-&gt;protocol=IPPROTO_ICMP;/*运用的协议为ICMP协议*/
    ip_hdr-&gt;ttl=255;	/*一个封包在网络上可以存活的时间*/
    ip_hdr-&gt;daddr=dest.sin_addr.s_addr;	/*目的地址*/
    len1=ip_hdr-&gt;hlen&lt;&lt;2;	/*ip数据长度*/
	/*ICMP头部结构体变量初始化*/
    icmp_hdr=(struct icmphdr *)(sendbuf+len1);	/*字符串指针*/
    icmp_hdr-&gt;type=8;  	/*初始化ICMP消息类型type*/
    icmp_hdr-&gt;code=0;	/*初始化消息代码code*/
    icmp_hdr-&gt;icmp_id=pid;	/*把进程标识码初始给icmp_id*/
    icmp_hdr-&gt;icmp_seq=nsent++;	/*发送的ICMP消息序号赋值给icmp序号*/    
    memset(icmp_hdr-&gt;data,0xff,datalen);	 /*将datalen中前datalen个字节替换为0xff并返回icmp_hdr-dat*/  

    gettimeofday((struct timeval *)icmp_hdr-&gt;data,NULL);	/* 获取当前时间*/

    len=ip_hdr-&gt;tot_len;	/*报文总长度赋值给len变量*/
    icmp_hdr-&gt;checksum=0;	/*初始化*/
    icmp_hdr-&gt;checksum=checksum((u8 *)icmp_hdr,len);  /*计算校验和*/

    sendto(sockfd,sendbuf,len,0,(struct sockaddr *)&amp;dest,sizeof (dest)); /*经socket传送数据*/
}
/*接收程序发出的ping命令的应答*/
void recv_reply()
{
    int n,len;
    int errno;

    n=nrecv=0;
    len=sizeof(from);	/*发送ping应答消息的主机IP*/

    while(nrecv&lt;4){
      if((n=recvfrom(sockfd,recvbuf,sizeof recvbuf,0,(struct sockaddr *)&amp;from,&amp;len))&lt;0){	/*经socket接收数据,如果正确接收返回接收到的字节数，失败返回0.*/
              if(errno==EINTR)	/*EINTR表示信号中断*/
              continue;
              bail("recvfrom error");
            }

            gettimeofday(&amp;recvtime,NULL);	/*记录收到应答的时间*/

            if(handle_pkt())	/*接收到错误的ICMP应答信息*/
				
            continue;
            nrecv++;
    }

    get_statistics(nsent,nrecv);	 /*统计ping命令的检测结果*/
}
 /*计算校验和*/
u16 checksum(u8 *buf,int len)
{
    u32 sum=0;
    u16 *cbuf;

    cbuf=(u16 *)buf;

    while(len&gt;1){
    sum+=*cbuf++;
    len-=2;
    }

    if(len)
        sum+=*(u8 *)cbuf;

        sum=(sum&gt;&gt;16)+(sum &amp; 0xffff);
        sum+=(sum&gt;&gt;16);

        return ~sum;
}
 /*ICMP应答消息处理*/
int handle_pkt()
{
    struct iphdr *ip;
    struct icmphdr *icmp;

    int ip_hlen;
    u16 ip_datalen;	/*ip数据长度*/
    double rtt;	/* 往返时间*/
    struct timeval *sendtime;

    ip=(struct iphdr *)recvbuf;

    ip_hlen=ip-&gt;hlen &lt;&lt; 2;
    ip_datalen=ntohs(ip-&gt;tot_len)-ip_hlen;

    icmp=(struct icmphdr *)(recvbuf+ip_hlen);

    if(checksum((u8 *)icmp,ip_datalen))	/*计算校验和*/
       return -1;


       if(icmp-&gt;icmp_id!=pid)
        return -1;

        sendtime=(struct timeval *)icmp-&gt;data; /*发送时间*/
        rtt=((&amp;recvtime)-&gt;tv_sec-sendtime-&gt;tv_sec)*1000+((&amp;recvtime)-&gt;tv_usec-sendtime-&gt;tv_usec)/1000.0;/* 往返时间*/
		/*打印结果*/
        printf("%d bytes from %s:icmp_seq=%u ttl=%d rtt=%.3f ms\n",
               ip_datalen, /*IP数据长度*/
               inet_ntoa(from.sin_addr),	/*目的ip地址*/
               icmp-&gt;icmp_seq, /*icmp报文序列号*/
               ip-&gt;ttl,	/*生存时间*/
               rtt);	/*往返时间*/

          return 0;
}
/*设置信号处理程序*/
void set_sighandler()
{
    act_alarm.sa_handler=alarm_handler;
    if(sigaction(SIGALRM,&amp;act_alarm,NULL)==-1)	/*sigaction()会依参数signum指定的信号编号来设置该信号的处理函数。参数signum指所要捕获信号或忽略的信号，&amp;act代表新设置的信号共用体，NULL代表之前设置的信号处理结构体。这里判断对信号的处理是否成功。*/
       bail("SIGALRM handler setting fails.");

       act_int.sa_handler=int_handler;
       if(sigaction(SIGINT,&amp;act_int,NULL)==-1)
         bail("SIGALRM handler setting fails.");
}
 /*统计ping命令的检测结果*/
void get_statistics(int nsent,int nrecv)
{
    printf("--- %s ping statistics ---\n",inet_ntoa(dest.sin_addr)); /*将网络地址转换成“.”点隔的字符串格式。*/
    printf("%d packets transmitted, %d received, %0.0f%% ""packet loss\n",
           nsent,nrecv,1.0*(nsent-nrecv)/nsent*100);
}
 /*错误报告*/
void bail(const char * on_what)
{
    fputs(strerror(errno),stderr);	/*:向指定的文件写入一个字符串（不写入字符串结束标记符‘\0’）。成功写入一个字符串后，文件的位置指针会自动后移，函数返回值为0；否则返回EOR(符号常量，其值为-1)。*/
    fputs(":",stderr);
    fputs(on_what,stderr);
    fputc('\n',stderr);	/*送一个字符到一个流中*/
    exit(1);
}

 /*SIGINT（中断信号）处理程序*/
void int_handler(int sig)
{
    get_statistics(nsent,nrecv);	/*统计ping命令的检测结果*/
    close(sockfd);	/*关闭网络套接字*/
    exit(1);
}
 /*SIGALRM（终止进程）处理程序*/
void alarm_handler(int signo)
{
    send_ping();	/*发送ping消息*/

}</pre><br>
<span style="font-family:宋体">程序执行：</span>
<p></p>
<p><span style="font-family:宋体">1、程序编译。在linux终端下执行如下命令：</span></p>
<p><span style="font-family:宋体"></span></p>
<p class="p0" style="margin-bottom:0pt; margin-top:0pt"></p>
<p>gcc&nbsp;ping.h&nbsp;-o&nbsp;myping&nbsp;-std=gnu99</p>
<p>因为原始套接字的创建需要root用户权限，所以为了能让所有的其他用户也可以使用该程序，需要通过如下命令设置myping的set-user-id位：</p>
<p>$sudo&nbsp;chmod&nbsp;u+s&nbsp;myping</p>
结果为：
<p class="p0" style="margin-bottom:0pt; margin-top:0pt"><img src="./ping_files/1340152813_4081.png" alt=""><br>
</p>
<br>
    
        <div style="padding-top:20px">         
            <p style="font-size:12px;">版权声明：本文为博主原创文章，未经博主允许不得转载。</p>
        </div>
</div>




<!-- Baidu Button BEGIN -->




<div class="bdsharebuttonbox" style="float: right;">
<a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="bds_more" data-cmd="more" style="background-position:0 0 !important; background-image: url(http://bdimg.share.baidu.com/static/api/img/share/icons_0_16.png?v=d754dcc0.png) !important"></a>
<a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间" style="background-position:0 -52px !important"></a>
<a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博" style="background-position:0 -104px !important"></a>
<a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="bds_tqq" data-cmd="tqq" title="分享到腾讯微博" style="background-position:0 -260px !important"></a>
<a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="bds_renren" data-cmd="renren" title="分享到人人网" style="background-position:0 -208px !important"></a>
<a href="http://blog.csdn.net/junjieguo/article/details/7678496#" class="bds_weixin" data-cmd="weixin" title="分享到微信" style="background-position:0 -1612px !important"></a>
</div>
<script>window._bd_share_config = { "common": { "bdSnsKey": {}, "bdText": "", "bdMini": "1", "bdMiniList": false, "bdPic": "", "bdStyle": "0", "bdSize": "16" }, "share": {} }; with (document) 0[(getElementsByTagName('head')[0] || body).appendChild(createElement('script')).src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + ~(-new Date() / 36e5)];</script>
<!-- Baidu Button END -->

   <link rel="stylesheet" href="http://static.blog.csdn.net/css/blog_detail.css">

    
<!--172.16.140.11-->
<ul class="article_next_prev">
            <li class="prev_article"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_shangyipian&#39;]);location.href=&#39;/junjieguo/article/details/7678143&#39;;">上一篇</span><a href="http://blog.csdn.net/junjieguo/article/details/7678143" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_shangyipian&#39;])">Linux中通过shell进行数据计算</a></li>
            <li class="next_article"><span onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_xiayipian&#39;]);location.href=&#39;/junjieguo/article/details/7823594&#39;;">下一篇</span><a href="http://blog.csdn.net/junjieguo/article/details/7823594" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_xiayipian&#39;])">Mysql热备份总结</a></li>
</ul>

<!-- Baidu Button BEGIN -->
<script type="text/javascript" id="bdshare_js" data="type=tools&amp;uid=1536434" src="./ping_files/bds_s_v2.js"></script>

<script type="text/javascript">
    document.getElementById("bdshell_js").src = "http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=" + Math.ceil(new Date()/3600000)
</script>
<!-- Baidu Button END -->

 

        <div id="digg" articleid="7678496">
            <dl id="btnDigg" class="digg digg_disable">
               
                 <dt>顶</dt>
                <dd>1</dd>
            </dl>
            <dl id="btnBury" class="digg digg_disable">
              
                  <dt>踩</dt>
                <dd>0</dd>
            </dl>
        </div>
      
</div>
<div id="suggest"></div>
         <script language="javascript" type="text/javascript">     
             $(function(){
                 $.get("/junjieguo/svc/GetSuggestContent/7678496",function(data){
                     $("#suggest").html(data);
                 });     
             });             
         </script>  


<style>
.blog-ass-articl dd {
color: #369;
width: 99%; /*修改行*/
float: left;
overflow: hidden;
font: normal normal 12px/23px "SimSun";
height: 23px;
margin: 0;
padding: 0 0 0 10px;
margin-right: 30px;
background: url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px;
}
</style>

<dl class="blog-ass-articl" id="res-relatived"> 
     <dt><span>猜你在找</span></dt>    


   


    <div id="adCollege" style="width: 42%;float: left;"> 
        <script src="./ping_files/job_reco.js" type="text/javascript"></script> 
        <script type="text/javascript">
            csdn.position.showEdu({
                sourceType: "blog",
                searchType: "detail",
                searchKey: "7678496",
                username: "",
                recordcount: "5",
                containerId: "adCollege" //容器DIV的id。 
            });
        </script> 
    <div class="tracking-ad" data-mod="popu_84"><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;"><a href="http://edu.csdn.net/course/detail/283" title="Linux基础入门" strategy="v4:content" target="_blank">Linux基础入门</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;"><a href="http://edu.csdn.net/course/detail/616" title="Linux企业常用文件管理命令详解" strategy="v4:content" target="_blank">Linux企业常用文件管理命令详解</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;"><a href="http://edu.csdn.net/course/detail/609" title="Linux操作系统及常用基础命令深入讲解" strategy="v4:content" target="_blank">Linux操作系统及常用基础命令深入讲解</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;"><a href="http://edu.csdn.net/course/detail/617" title="Linux文件管理类命令详解" strategy="v4:content" target="_blank">Linux文件管理类命令详解</a></dd><dd style="background:url(http://static.blog.csdn.net/skin/default/images/blog-dot-red3.gif) no-repeat 0 10px; white-space: nowrap;"><a href="http://edu.csdn.net/course/detail/608" title="马哥Linux教程-Linux操作系统基础由浅入深全面讲解2" strategy="v4:content" target="_blank">马哥Linux教程-Linux操作系统基础由浅入深全面讲解2</a></dd></div></div>  

    
     <div id="res" data-mod="popu_36" class="tracking-ad" style="width: 42%; float: left; margin-right: 30px; display: none;"></div>
   
</dl>



    <div id="ad_cen">        
<!--AdForward Begin:-->
<script type="text/javascript" src="./ping_files/s" charset="gbk"></script><script type="text/javascript">
var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') + 
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
</script>

<div id="div-gpt-ad-1429585234886-0">
<script type="text/javascript">
googletag.cmd.push(function() {
googletag.defineSlot('/8456/IDG.CN_B2B_csdn.net', [728, 90], 'div-gpt-ad-1429585234886-0')
.addService(googletag.pubads())
.setTargeting("category","blog");

if (self != top) {
         googletag.pubads().set("page_url", document.referrer);
         }

googletag.enableServices();
googletag.display('div-gpt-ad-1429585234886-0');
});
</script>
</div>
<!--AdForward End-->    </div>  

<div class="comment_class">
    <div id="comment_title" class="panel_head">
        <span class="see_comment">查看评论</span><a name="comments"></a></div>
    <div id="comment_list">
    </div>
    <div id="comment_bar">
    </div>
    <div id="comment_form"><div class="guest_link">您还没有登录,请<a href="javascript:void(0);" onclick="javascript:loginbox();">[登录]</a>或<a href="http://passport.csdn.net/account/register?from=http%3A%2F%2Fblog.csdn.net%2Fjunjieguo%2Farticle%2Fdetails%2F7678496">[注册]</a></div></div>

    <div class="announce">
        * 以上用户言论只代表其个人观点，不代表CSDN网站的观点或立场<a name="reply"></a><a name="quote"></a></div>
</div>

<script type="text/javascript">
    var fileName = '7678496';
    var commentscount = 6;
    var islock = false
</script>
<script type="text/javascript" src="./ping_files/comment.js"></script>
    <div id="ad_bot">
    </div>
<div id="report_dialog">
</div>

<div id="d-top" style="bottom:60px;">
        <a id="quick-reply" class="btn btn-top q-reply" title="快速回复" style="display:none;">
            <img src="./ping_files/blog-icon-reply.png" alt="快速回复">
        </a>    

    <a id="d-top-a" class="btn btn-top backtop" style="display: none;" title="返回顶部" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_huidaodingbu&#39;])">         
         <img src="./ping_files/top.png" alt="TOP">
    </a>
</div>
<script type="text/javascript">
    $(function ()
    {
        $("#ad_frm_0").height("90px");
        
        setTimeout(function(){
            $("#ad_frm_2").height("200px");
        },1000);    
    });
  
</script>
<style type="text/css">
    .tag_list
    {
        background: none repeat scroll 0 0 #FFFFFF;
        border: 1px solid #D7CBC1;
        color: #000000;
        font-size: 12px;
        line-height: 20px;
        list-style: none outside none;
        margin: 10px 2% 0 1%;
        padding: 1px;
    }
    .tag_list h5
    {
        background: none repeat scroll 0 0 #E0DBD3;
        color: #47381C;
        font-size: 12px;
        height: 24px;
        line-height: 24px;
        padding: 0 5px;
        margin: 0;
    }
    .tag_list h5 a
    {
        color: #47381C;
    }
    .classify
    {
        margin: 10px 0;
        padding: 4px 12px 8px;
    }
    .classify a
    {
        margin-right: 20px;
        white-space: nowrap;
    }
</style>


<div class="tag_list" style="">

    <h5>
        <a href="http://www.csdn.net/tag/" target="_blank">核心技术类目</a></h5>
    <div class="classify">
<a title="全部主题" href="http://www.csdn.net/tag" target="_blank" onclick="LogClickCount(this,336);">全部主题</a>
<a title="Hadoop" href="http://g.csdn.net/5272865" target="_blank" onclick="LogClickCount(this,336);">Hadoop</a>
<a title="AWS" href="http://g.csdn.net/5272866" target="_blank" onclick="LogClickCount(this,336);">AWS</a>
<a title="移动游戏" href="http://g.csdn.net/5272870" target="_blank" onclick="LogClickCount(this,336);">移动游戏</a>
<a title="Java" href="http://g.csdn.net/5272871" target="_blank" onclick="LogClickCount(this,336);">Java</a>
<a title="Android" href="http://g.csdn.net/5272872" target="_blank" onclick="LogClickCount(this,336);">Android</a>
<a title="iOS" href="http://g.csdn.net/5272873" target="_blank" onclick="LogClickCount(this,336);">iOS</a>
<a title="Swift" href="http://g.csdn.net/5272868" target="_blank" onclick="LogClickCount(this,336);">Swift</a>
<a title="智能硬件" href="http://g.csdn.net/5272869" target="_blank" onclick="LogClickCount(this,336);">智能硬件</a>
<a title="Docker" href="http://g.csdn.net/5272867" target="_blank" onclick="LogClickCount(this,336);">Docker</a>
<a title="OpenStack" href="http://g.csdn.net/5272925" target="_blank" onclick="LogClickCount(this,336);">OpenStack</a>
<a title="VPN" href="http://www.csdn.net/tag/vpn" target="_blank" onclick="LogClickCount(this,336);">VPN</a>
<a title="Spark" href="http://g.csdn.net/5272924" target="_blank" onclick="LogClickCount(this,336);">Spark</a>
<a title="ERP" href="http://www.csdn.net/tag/erp" target="_blank" onclick="LogClickCount(this,336);">ERP</a>
<a title="IE10" href="http://www.csdn.net/tag/ie10" target="_blank" onclick="LogClickCount(this,336);">IE10</a>
<a title="Eclipse" href="http://www.csdn.net/tag/eclipse" target="_blank" onclick="LogClickCount(this,336);">Eclipse</a>
<a title="CRM" href="http://www.csdn.net/tag/crm" target="_blank" onclick="LogClickCount(this,336);">CRM</a>
<a title="JavaScript" href="http://www.csdn.net/tag/javascript" target="_blank" onclick="LogClickCount(this,336);">JavaScript</a>
<a title="数据库" href="http://www.csdn.net/tag/%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" onclick="LogClickCount(this,336);">数据库</a>
<a title="Ubuntu" href="http://www.csdn.net/tag/ubuntu" target="_blank" onclick="LogClickCount(this,336);">Ubuntu</a>
<a title="NFC" href="http://www.csdn.net/tag/nfc" target="_blank" onclick="LogClickCount(this,336);">NFC</a>
<a title="WAP" href="http://www.csdn.net/tag/wap" target="_blank" onclick="LogClickCount(this,336);">WAP</a>
<a title="jQuery" href="http://www.csdn.net/tag/jquery" target="_blank" onclick="LogClickCount(this,336);">jQuery</a>
<a title="BI" href="http://www.csdn.net/tag/bi" target="_blank" onclick="LogClickCount(this,336);">BI</a>
<a title="HTML5" href="http://www.csdn.net/tag/html5" target="_blank" onclick="LogClickCount(this,336);">HTML5</a>
<a title="Spring" href="http://www.csdn.net/tag/spring" target="_blank" onclick="LogClickCount(this,336);">Spring</a>
<a title="Apache" href="http://www.csdn.net/tag/apache" target="_blank" onclick="LogClickCount(this,336);">Apache</a>
<a title=".NET" href="http://www.csdn.net/tag/.net" target="_blank" onclick="LogClickCount(this,336);">.NET</a>
<a title="API" href="http://www.csdn.net/tag/api" target="_blank" onclick="LogClickCount(this,336);">API</a>
<a title="HTML" href="http://www.csdn.net/tag/html" target="_blank" onclick="LogClickCount(this,336);">HTML</a>
<a title="SDK" href="http://www.csdn.net/tag/sdk" target="_blank" onclick="LogClickCount(this,336);">SDK</a>
<a title="IIS" href="http://www.csdn.net/tag/iis" target="_blank" onclick="LogClickCount(this,336);">IIS</a>
<a title="Fedora" href="http://www.csdn.net/tag/fedora" target="_blank" onclick="LogClickCount(this,336);">Fedora</a>
<a title="XML" href="http://www.csdn.net/tag/xml" target="_blank" onclick="LogClickCount(this,336);">XML</a>
<a title="LBS" href="http://www.csdn.net/tag/lbs" target="_blank" onclick="LogClickCount(this,336);">LBS</a>
<a title="Unity" href="http://www.csdn.net/tag/unity" target="_blank" onclick="LogClickCount(this,336);">Unity</a>
<a title="Splashtop" href="http://www.csdn.net/tag/splashtop" target="_blank" onclick="LogClickCount(this,336);">Splashtop</a>
<a title="UML" href="http://www.csdn.net/tag/uml" target="_blank" onclick="LogClickCount(this,336);">UML</a>
<a title="components" href="http://www.csdn.net/tag/components" target="_blank" onclick="LogClickCount(this,336);">components</a>
<a title="Windows Mobile" href="http://www.csdn.net/tag/windowsmobile" target="_blank" onclick="LogClickCount(this,336);">Windows Mobile</a>
<a title="Rails" href="http://www.csdn.net/tag/rails" target="_blank" onclick="LogClickCount(this,336);">Rails</a>
<a title="QEMU" href="http://www.csdn.net/tag/qemu" target="_blank" onclick="LogClickCount(this,336);">QEMU</a>
<a title="KDE" href="http://www.csdn.net/tag/kde" target="_blank" onclick="LogClickCount(this,336);">KDE</a>
<a title="Cassandra" href="http://www.csdn.net/tag/cassandra" target="_blank" onclick="LogClickCount(this,336);">Cassandra</a>
<a title="CloudStack" href="http://www.csdn.net/tag/cloudstack" target="_blank" onclick="LogClickCount(this,336);">CloudStack</a>
<a title="FTC" href="http://www.csdn.net/tag/ftc" target="_blank" onclick="LogClickCount(this,336);">FTC</a>
<a title="coremail" href="http://www.csdn.net/tag/coremail" target="_blank" onclick="LogClickCount(this,336);">coremail</a>
<a title="OPhone " href="http://www.csdn.net/tag/ophone" target="_blank" onclick="LogClickCount(this,336);">OPhone </a>
<a title="CouchBase" href="http://www.csdn.net/tag/couchbase" target="_blank" onclick="LogClickCount(this,336);">CouchBase</a>
<a title="云计算" href="http://www.csdn.net/tag/%E4%BA%91%E8%AE%A1%E7%AE%97" target="_blank" onclick="LogClickCount(this,336);">云计算</a>
<a title="iOS6" href="http://www.csdn.net/tag/iOS6" target="_blank" onclick="LogClickCount(this,336);">iOS6</a>
<a title="Rackspace " href="http://www.csdn.net/tag/rackspace" target="_blank" onclick="LogClickCount(this,336);">Rackspace </a>
<a title="Web App" href="http://www.csdn.net/tag/webapp" target="_blank" onclick="LogClickCount(this,336);">Web App</a>
<a title="SpringSide" href="http://www.csdn.net/tag/springside" target="_blank" onclick="LogClickCount(this,336);">SpringSide</a>
<a title="Maemo" href="http://www.csdn.net/tag/maemo" target="_blank" onclick="LogClickCount(this,336);">Maemo</a>
<a title="Compuware" href="http://www.csdn.net/tag/compuware" target="_blank" onclick="LogClickCount(this,336);">Compuware</a>
<a title="大数据" href="http://www.csdn.net/tag/%E5%A4%A7%E6%95%B0%E6%8D%AE" target="_blank" onclick="LogClickCount(this,336);">大数据</a>
<a title="aptech" href="http://www.csdn.net/tag/aptech" target="_blank" onclick="LogClickCount(this,336);">aptech</a>
<a title="Perl" href="http://www.csdn.net/tag/perl" target="_blank" onclick="LogClickCount(this,336);">Perl</a>
<a title="Tornado" href="http://www.csdn.net/tag/tornado" target="_blank" onclick="LogClickCount(this,336);">Tornado</a>
<a title="Ruby" href="http://www.csdn.net/tag/ruby" target="_blank" onclick="LogClickCount(this,336);">Ruby</a>
<a title="Hibernate" href="http://www.csdn.net/hibernate" target="_blank" onclick="LogClickCount(this,336);">Hibernate</a>
<a title="ThinkPHP" href="http://www.csdn.net/tag/thinkphp" target="_blank" onclick="LogClickCount(this,336);">ThinkPHP</a>
<a title="HBase" href="http://www.csdn.net/tag/hbase" target="_blank" onclick="LogClickCount(this,336);">HBase</a>
<a title="Pure" href="http://www.csdn.net/tag/pure" target="_blank" onclick="LogClickCount(this,336);">Pure</a>
<a title="Solr" href="http://www.csdn.net/tag/solr" target="_blank" onclick="LogClickCount(this,336);">Solr</a>
<a title="Angular" href="http://www.csdn.net/tag/angular" target="_blank" onclick="LogClickCount(this,336);">Angular</a>
<a title="Cloud Foundry" href="http://www.csdn.net/tag/cloudfoundry" target="_blank" onclick="LogClickCount(this,336);">Cloud Foundry</a>
<a title="Redis" href="http://www.csdn.net/tag/redis" target="_blank" onclick="LogClickCount(this,336);">Redis</a>
<a title="Scala" href="http://www.csdn.net/tag/scala" target="_blank" onclick="LogClickCount(this,336);">Scala</a>
<a title="Django" href="http://www.csdn.net/tag/django" target="_blank" onclick="LogClickCount(this,336);">Django</a>
<a title="Bootstrap" href="http://www.csdn.net/tag/bootstrap" target="_blank" onclick="LogClickCount(this,336);">Bootstrap</a>
    </div>

</div>
  <script language="javascript" type="text/javascript">     
      $(function(){
              setTimeout(function(){
                  $.get("/junjieguo/svc/GetTagContent",function(data){
                      $(".tag_list").html(data).show();
                  });     
              });
          },500);                       
 </script> 


<div id="pop_win" style="display:none ;position: absolute; z-index: 10000; border: 1px solid rgb(220, 220, 220); top: 222.5px; left: 630px; opacity: 1; background: none 0px 0px repeat scroll rgb(255, 255, 255);">
    
</div>
<div id="popup_mask"></div>
<style>
    #popup_mask
    {
        position: absolute;
        width: 100%;
        height: 100%;
        background: #000;
        z-index: 9999;
        left: 0px;
        top: 0px;
        opacity: 0.3;
        filter: alpha(opacity=30);
        display: none;
    }

</style>




<script type="text/javascript">
    $(function(){
        setTimeout(function(){
            $(".comment_body:contains('回复')").each(function(index,item){
                var u=$(this).text().split('：')[0].toString().replace("回复","")
                var thisComment=$(this);
                if(u)
                {
                    $.getJSON("https://passport.csdn.net/get/nick?callback=?", {users: u}, function(a) {
                        if(a!=null&&a.data!=null&&a.data.length>0)
                        {
                            nick=a.data[0].n; 
                            if(u!=nick)
                            {
                                thisComment.text(thisComment.text().replace(u,nick));  
                            }
                        }       
                    });  
                }
            });
        },200);  
        
        setTimeout(function(){
            $("a img[src='http://js.tongji.linezing.com/stats.gif']").parent().css({"position":"absolute","left":"50%"});
        },300);
    });

    function loginbox(){
        var $logpop=$("#pop_win");
        $logpop.html('<iframe src="https://passport.csdn.net/account/loginbox?service=http://static.blog.csdn.net/callback.htm" frameborder="0" height="600" width="400" scrolling="no"></iframe>');

        $('#popup_mask').css({
            opacity: 0.5,
            width: $( document ).width() + 'px',
            height:  $( document ).height() + 'px'
        });
        $('#popup_mask').css("display","block");
 
        $logpop.css( {
            top: ($( window ).height() - $logpop.height())/ 2  + $( window 
       ).scrollTop() + 'px',
            left:($( window ).width() - $logpop.width())/ 2
        } );
 
        setTimeout( function () {
            $logpop.show();
            $logpop.css( {
                opacity: 1
            } );
        }, 200 );
 
        $('#popup_mask').unbind("click");
        $('#popup_mask').bind("click", function(){
            $('#popup_mask').hide();
            var $clopop = $("#pop_win");
            $("#common_ask_div_sc").css("display","none");
            $clopop.css( {
                opacity: 0
            } );
            setTimeout( function () {
                $clopop.hide();
            }, 350 );
            return false;
        });
    }    

</script>
                        <div class="clear">
                        </div>
                    </div>                   
                
            </div>
                   
           <div id="side">
    <div class="side">
<div id="panel_Profile" class="panel">
<ul class="panel_head"><span>个人资料</span></ul>
<ul class="panel_body profile">
<div id="blog_userface">
    <a href="http://my.csdn.net/junjieguo" target="_blank">
    <img src="./ping_files/1_junjieguo.jpg" title="访问我的空间" style="max-width:90%">
    </a>
    <br>
    <span><a href="http://my.csdn.net/junjieguo" class="user_name" target="_blank">junjieguo</a></span>
</div>
<div class="interact">

    <a href="javascript:void(0);" class="attent" id="span_add_follow" title="[加关注]"></a>

 <a href="javascript:void(0);" class="letter" title="[发私信]" onclick="window.open(&#39;http://msg.csdn.net/letters/model?receiver=junjieguo&#39;,&#39;_blank&#39;,&#39;height=350,width=700&#39;);_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_sixin&#39;])"></a>  
</div>
<div id="blog_medal">
                <div id="bms_box">
               </div>
</div>
<ul id="blog_rank">
    <li>访问：<span>194614次</span></li>
    <li>积分：<span>3000</span> </li>    
    <li>等级： <span style="position:relative;display:inline-block;z-index:1">
            <img src="./ping_files/blog5.png" alt="" style="vertical-align: middle;" id="leveImg">
            <div id="smallTittle" style=" position: absolute;  left: -24px;  top: 25px;  text-align: center;  width: 101px;  height: 32px;  background-color: #fff;  line-height: 32px;  border: 2px #DDDDDD solid;  box-shadow: 0px 2px 2px rgba (0,0,0,0.1);  display: none;   z-index: 999;">
            <div style="left: 42%;  top: -8px;  position: absolute;  width: 0;  height: 0;  border-left: 10px solid transparent;  border-right: 10px solid transparent;  border-bottom: 8px solid #EAEAEA;"></div>
            积分：3000 </div>
        </span>  </li>
    <li>排名：<span>第6083名</span></li>
</ul>
<ul id="blog_statistics">
    <li>原创：<span>96篇</span></li>
    <li>转载：<span>30篇</span></li>
    <li>译文：<span>0篇</span></li>
    <li>评论：<span>33条</span></li>
</ul>
</ul>
</div>


<div class="panel" id="panel_Search">
    <ul class="panel_head"><span>文章搜索</span></ul>
    <ul class="panel_body">
        <form id="frmSearch" action="http://so.csdn.net/search" class="form_search" target="_blank">
        <span><input id="inputSearch" type="text" class="blogsearch" title="请输入关键字"></span>
        <input id="btnSubmit" type="button" value="搜索" title="search in blog">
        <input type="hidden" name="q" id="inputQ">
        <input type="hidden" name="t" value="blog">
        <a id="btnSearchBlog" target="_blank"></a>
        </form>
    </ul>
</div>

<script type="text/javascript">
    $(function () {
        $("#btnSubmit").click(function () {           
            search();
        });

        $("#frmSearch").submit(function () {
            search();
            return false;
        });

        function search()
        {
            var url = "http://so.csdn.net/so/search/s.do?q=" + encodeURIComponent($("#inputSearch").val()) + "&u=" + username + "&t=blog";
            window.location.href = url;
        }   
    });
</script>

<div id="custom_column_21113557" class="panel">
<ul class="panel_head"><span>CSDN之外的我</span></ul>
<ul class="panel_body">

<a href="http://weibo.com/icherishu" target="_blank"><img src="./ping_files/1339813368_7089.jpg"></a>
<br>
<a href="http://t.qq.com/junjieguo" target="_blank"><img src="./ping_files/1339813562_7460.jpg"></a>
<br>
<hr>

</ul>
</div><div id="panel_Category" class="panel">
<ul class="panel_head"><span>文章分类</span></ul>
<ul class="panel_body">    
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/828667" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">计算机基础</a><span>(6)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/879192" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">linux</a><span>(22)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/880326" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">shell</a><span>(26)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/917089" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">网站</a><span>(3)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1058315" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">C语言</a><span>(5)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1071354" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">Linux常见问题</a><span>(7)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1071363" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">随性的生活</a><span>(9)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1077022" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">读书中遇到的软件及技术</a><span>(17)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1120071" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">防火墙</a><span>(3)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1121176" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">Shell编程</a><span>(6)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1121178" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">Perl编程</a><span>(1)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1127661" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">正则表达式</a><span>(2)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1149223" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">linux安全</a><span>(1)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1164657" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">云计算</a><span>(1)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1167231" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">mysql数据库</a><span>(8)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1265048" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">php</a><span>(3)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1298158" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">linux命令</a><span>(2)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/1331423" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">python</a><span>(1)</span>
                </li>
                 <li>
                    <a href="http://blog.csdn.net/junjieguo/article/category/2391987" onclick="_gaq.push([&#39;_trackEvent&#39;,&#39;function&#39;, &#39;onclick&#39;, &#39;blog_articles_wenzhangfenlei&#39;]); ">zookeeper</a><span>(1)</span>
                </li>
</ul>
</div><div id="hotarticls" class="panel">
<ul class="panel_head">
    <span>       
阅读排行    </span>
</ul>

<ul class="panel_body itemlist">
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7291764" title="用C语言求两个数的最大公约数和最小公倍数">用C语言求两个数的最大公约数和最小公倍数</a><span>(12962)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/6954570" title="RedHat 6.0（64位）如何使用CentOS YUM源更新的方法">RedHat 6.0（64位）如何使用CentOS YUM源更新的方法</a><span>(9507)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7525794" title="sed和awk的常用实例">sed和awk的常用实例</a><span>(6773)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7293622" title="bash shell中expr命令下几种的使用">bash shell中expr命令下几种的使用</a><span>(5812)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/6745566" title="Linux下find 命令用法详解+实例">Linux下find 命令用法详解+实例</a><span>(4809)</span>
</li>
<li>
<a href="./ping_files/ping.htm" title="在linux中用C语言实现ping命令的部分功能">在linux中用C语言实现ping命令的部分功能</a><span>(4705)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7668775" title="Mysql学习3——查看表结构、修改和删除数据表">Mysql学习3——查看表结构、修改和删除数据表</a><span>(4229)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/6546484" title="文件名背景变成蓝色，怎么调都调不回来，一般的方法都没用">文件名背景变成蓝色，怎么调都调不回来，一般的方法都没用</a><span>(3640)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7303954" title="二十五条励志金句">二十五条励志金句</a><span>(3225)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7392343" title="用C语言代码实现n进制数转换为十进制数">用C语言代码实现n进制数转换为十进制数</a><span>(3213)</span>
</li>
</ul>
</div>
<div id="hotarticls2" class="panel">
<ul class="panel_head"><span>评论排行</span></ul>
<ul class="panel_body itemlist">
<li>
<a href="./ping_files/ping.htm" title="在linux中用C语言实现ping命令的部分功能">在linux中用C语言实现ping命令的部分功能</a><span>(6)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7006759" title="对浏览器各个性能的测试评比">对浏览器各个性能的测试评比</a><span>(5)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7661916" title="Mysql学习1———创建、查看、删除数据库">Mysql学习1———创建、查看、删除数据库</a><span>(4)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7438706" title="Linux下的硬链接和符号链接">Linux下的硬链接和符号链接</a><span>(3)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7166077" title="ATM取款机系统模拟仿真">ATM取款机系统模拟仿真</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7392343" title="用C语言代码实现n进制数转换为十进制数">用C语言代码实现n进制数转换为十进制数</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/6941200" title="sed替换">sed替换</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/7215297" title="30岁前成功的12条黄金法则">30岁前成功的12条黄金法则</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/6908605" title="读《乌合之众》摘录">读《乌合之众》摘录</a><span>(2)</span>
</li>
<li>
<a href="http://blog.csdn.net/junjieguo/article/details/6874720" title="Shell调试技术总结（一）">Shell调试技术总结（一）</a><span>(2)</span>
</li>
</ul>
</div>
<div id="newcomments" class="panel">
<ul class="panel_head"><span>最新评论</span></ul>
<ul class="panel_body itemlist">
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/6954570#comments">RedHat 6.0（64位）如何使用CentOS YUM源更新的方法</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/lingdi2000" class="user_name">lingdi2000</a>:
wget 下载的时候 ERROR 404
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7166077#comments">ATM取款机系统模拟仿真</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/junjieguo" class="user_name">junjieguo</a>:
@u012228171:这个程序需要连数据库，数据库要有相应的库表才行。
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7166077#comments">ATM取款机系统模拟仿真</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/u012228171" class="user_name">u012228171</a>:
你好，请问这个程序我拷贝下来怎么不能运行啊，能给我详细讲解下吗
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7678496#comments">在linux中用C语言实现ping命令的部分功能</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/qq417731798" class="user_name">qq417731798</a>:
55555555555555555，怎么运行呀~看不懂~求解，怎么root怎么运行~跪谢
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7678496#comments">在linux中用C语言实现ping命令的部分功能</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/stdying" class="user_name">stdying</a>:
IP结构里也有检验和，为什么在程序中只求ICMP的检验和
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7678496#comments">在linux中用C语言实现ping命令的部分功能</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/zhiy_wis" class="user_name">zhiy_wis</a>:
很详细，过来学习了
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7438706#comments">Linux下的硬链接和符号链接</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/BYSF_XF" class="user_name">BYSF_XF</a>:
个人觉得有一定的影响，毕竟还要多经过一个步骤，不像硬连接一样。哪天写个程序测试下
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7438706#comments">Linux下的硬链接和符号链接</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/junjieguo" class="user_name">junjieguo</a>:
@BYSF_XF:不好意思，没研究过，应该不会影响性能吧。
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7438706#comments">Linux下的硬链接和符号链接</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/BYSF_XF" class="user_name">BYSF_XF</a>:
弱弱的问一句，符号连接影响性能吗
    </p>
    </li>
    <li>
   
         <a href="http://blog.csdn.net/junjieguo/article/details/7438706#comments">在linux中用C语言实现ping命令的部分功能</a>
    <p style="margin:0px;"><a href="http://blog.csdn.net/junjieguo" class="user_name">junjieguo</a>:
@painberg: 应该都可以
    </p>
    </li>
</ul>
</div>
    </div>
    <div class="clear">
    </div>
 </div>   
            <div class="clear">
            </div>
        </div>
        

<script type="text/javascript" src="./ping_files/cnick.js"></script>
<script type="text/javascript" src="./ping_files/newblog.min.js"></script>


<script type="text/javascript" src="./ping_files/showblogmedal.ashx"></script>
<script type="text/javascript" src="./ping_files/JavaScript1.js"></script><link rel="stylesheet" type="text/css" href="./ping_files/pub_footer_2014.css"><div class="pub_fo"><div id="pub_footerall" class="pub_footer_new"><dl><dt></dt> <dd class="foot_sub_menu"><a href="http://www.csdn.net/company/about.html" target="_blank">公司简介</a><span>|</span><a href="http://www.csdn.net/company/recruit.html" target="_blank">招贤纳士</a><span>|</span><a href="http://www.csdn.net/company/marketing.html" target="_blank">广告服务</a><span>|</span><a href="http://www.csdn.net/company/account.html" target="_blank">银行汇款帐号</a><span>|</span><a href="http://www.csdn.net/company/contact.html" target="_blank">联系方式</a><span>|</span><a href="http://www.csdn.net/company/statement.html" target="_blank">版权声明</a><span>|</span><a href="http://www.csdn.net/company/layer.html" target="_blank">法律顾问</a><span>|</span><a href="mailto:webmaster@csdn.net">问题报告</a><span>|</span><a target="_blank" href="http://www.csdn.net/friendlink.html">合作伙伴</a><span>|</span><a href="http://bbs.csdn.net/forums/Service" target="_blank">论坛反馈</a></dd><dd class="foot_contact"><a href="http://wpa.qq.com/msgrd?v=3&uin=2355263776&site=qq&menu=yes" target="_blank" class="qq">网站客服</a><a href="http://wpa.qq.com/msgrd?v=3&uin=2251809102&site=qq&menu=yes" target="_blank" class="qq">杂志客服</a><a href="http://e.weibo.com/csdnsupport/profile" target="_blank" class="weibo">微博客服</a><a href="mailto:webmaster@csdn.net" class="email" title="联系邮箱">webmaster@csdn.net</a><span class="phone" title="服务热线">400-600-2320</span><span class="interval">|</span><span>北京创新乐知信息技术有限公司 版权所有</span><span class="interval">|</span><span>江苏乐知网络技术有限公司 提供商务支持</span></dd><dd class="foot_copyright"><span>京&nbsp;ICP&nbsp;证&nbsp;070598&nbsp;号</span><span class="interval">|</span><span>Copyright © 1999-2014, CSDN.NET, All Rights Reserved&nbsp;</span><a href="http://www.hd315.gov.cn/beian/view.asp?bianhao=010202001032100010" target="_blank"><img src="./ping_files/gongshang_logos.gif" alt="GongshangLogo" title=""></a></dd></dl></div></div><div id="note1" class="csdn_note" style="display:none; position:absolute; z-index:9999; width:440px">  <span class="notice_top_arrow"><span class="inner"></span></span>  <div class="box"></div></div><div class="csdn_notice_tip" style="display: none; position: absolute; z-index: 9990; width: 170px;">  <iframe src="about:blank" frameborder="0" scrolling="no" style="z-index:-1;position:absolute;top:0;left:0;width:100%;height:100%;background:transparent"></iframe>  <div class="tip_text">您有<strong>0</strong>条新通知</div>  <a href="javascript:void 0" class="close2"></a></div><script id="noticeScript" type="text/javascript" btnid="header_notice_num" wrapid="note1" count="5" subcount="5" src="./ping_files/notify.js"></script>

    <script type="text/javascript" src="./ping_files/login.js"></script>
<script type="text/javascript">document.write("<img src=http://counter.csdn.net/pv.aspx?id=24 border=0 width=0 height=0>");</script>
<script type="text/javascript" src="./ping_files/counter.js"></script>
<script type="text/javascript" src="./ping_files/ad-blog.js"></script>
<script type="text/javascript">
    $(function () {
        function __get_code_toolbar(snippet_id) {
            return $("<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "' target='_blank' title='在CODE上查看代码片' style='text-indent:0;'><img src='https://code.csdn.net/assets/CODE_ico.png' width=12 height=12 alt='在CODE上查看代码片' style='position:relative;top:1px;left:2px;'/></a>"
                    + "<a href='https://code.csdn.net/snippets/"
                    + snippet_id
                    + "/fork' target='_blank' title='派生到我的代码片'  style='text-indent:0;'><img src='https://code.csdn.net/assets/ico_fork.svg' width=12 height=12 alt='派生到我的代码片' style='position:relative;top:2px;left:2px;'/></a>");
        }
        
        $("[code_snippet_id]").each(function () {
            __s_id = $(this).attr("code_snippet_id");
            if (__s_id != null && __s_id != "" && __s_id != 0 && parseInt(__s_id) > 70020) {
                __code_tool = __get_code_toolbar(__s_id);
                $(this).prev().find(".tools").append(__code_tool);
            }
        });
    });
</script>




    </div><input type="hidden" id="aa_g_data_ids">
      <!--new top-->
    
    <script id="csdn-toolbar-id" btnid="header_notice_num" wrapid="note1" count="5" subcount="5" type="text/javascript" src="./ping_files/toolbar.js"></script>
     <!--new top-->
   
    <link href="./ping_files/ask_float_block.css" type="text/css" rel="stylesheet">
    <script language="JavaScript" type="text/javascript" src="./ping_files/wmd.js"></script>
    <script language="JavaScript" type="text/javascript" src="./ping_files/showdown.js"></script>
    <script language="JavaScript" type="text/javascript" src="./ping_files/prettify.js"></script>
    <script language="JavaScript" type="text/javascript" src="./ping_files/ask_float_block.js"></script>
   

   
 <div id="tag-suggest-pop">
  <div class="relative">
    <div class="close"></div>
    <div class="content"></div>
  </div>
</div><link rel="stylesheet" type="text/css" media="screen" href="./ping_files/ask_float_fonts_css-6b30a53970eb5c3a2a045e3df585b475.css"><div data-mod="popu_64" class="tracking-ad" chg-blk="0"><a id="com-appcode-float-block" href="http://www.csdn.net/app/" target="_blank" title="APP二维码" style="top:257px"><span id="appcode-close"></span></a><a id="com-app-float-block" href="http://www.csdn.net/app/" title="APP下载" style="top:341px"></a><a id="com-quick-reply" title="快速回复" style="top:379px"></a><a id="com-d-top-a" style="top:417px" title="返回顶部" onclick=""></a> </div><div class="pop_edit ask_second comm_ask_second"><h3>提问</h3><span class="ask_float_span">您的问题将会被发布在“<a class="ask_float_channel" href="http://ask.csdn.net/" target="_blank" style="cursor:pointer">技术问答</a>”频道</span><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" nodetype="close" class="close">×</a><div class="context"><div class="err_div"><span class="err_ico"></span><span class="err_txt">该问题已存在，请勿重复提问</span></div><div class="input_div"><input id="askInputSecond" type="text" style="font-size:14px;" placeholder="问题标题"></div><div class="cm_box"><div class="cm_dialog"></div> <div class="pop_cm cm_add_link"><input type="text" placeholder="链接内容" id="af_cm_link_txt"><input type="text" placeholder="链接地址" id="af_cm_link_url"><input type="text" placeholder="链接提示" id="af_cm_link_tit"><div class="text-right"><span class="btn btn-default btn-sm" id="add_link_btn">插入链接</span> </div> </div><div class="pop_cm cm_add_img"><div class="nav-tabs"><a class="img_tab active" href="http://blog.csdn.net/junjieguo/article/details/7678496#tab_upload">本地上传</a><a class="img_tab" href="http://blog.csdn.net/junjieguo/article/details/7678496#tab_weburl">网络图片</a></div><div class="tab_panel active" id="tab_upload"><div class="set_img"><iframe src="about:blank"></iframe></div></div><div class="tab_panel" id="tab_weburl"><input type="text" placeholder="图片地址" id="af_cm_img_url"><input type="text" placeholder="图片说明" id="af_cm_img_alt"><div class="text-right"><span class="btn btn-default btn-sm" id="add_img_btn">插入图片</span> </div></div> </div></div> <textarea id="editor_all" rows="8" style="display: none;"></textarea><div class="editor-toolbar"><i class="separator">|</i><a class="icon-headline" title="标题一（Ctrl+Alt+1）"></a><a class="icon-heading" title="标题二（Ctrl+Alt+2）"></a><a class="icon-bold" title="粗体（Ctrl+B）"></a><a class="icon-italic" title="斜体（Ctrl+I）"></a><i class="separator">|</i><a class="icon-quote-left" title="引用（Ctrl+’）"></a><a class="icon-code" title="插入代码片（Ctrl+,）"></a><a class="icon-list-ul" title="无序列表（Ctrl+L）"></a><a class="icon-list-ol" title="有序列表（Ctrl+Alt+L）"></a><i class="separator">|</i><a class="icon-link" title="添加链接（Ctrl+K）"></a><a class="icon-picture" title="添加图片（Ctrl+Alt+I）"></a><i class="separator">|</i><a class="icon-reply" title="撤退（Ctrl+Z）"></a><a class="icon-share-alt" title="前进（Ctrl+Shift+Z）"></a><i class="separator">|</i><a class="icon-info" href="http://ask.csdn.net/pages/markdown" target="_blank" title="markdown语法参考"></a><a class="icon-preview" title="预览"></a><i class="separator">|</i></div><div class="CodeMirror cm-s-paper CodeMirror-focused"><div style="overflow: hidden; position: relative; width: 3px; height: 0px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none; font-size: 4px;"></textarea></div><div class="CodeMirror-hscrollbar"><div style="height: 1px;"></div></div><div class="CodeMirror-vscrollbar"><div style="width: 1px;"></div></div><div class="CodeMirror-scrollbar-filler"></div><div class="CodeMirror-gutter-filler"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="min-width: 33px;"><div style="position: relative;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><pre>&nbsp;<span style="display: inline-block; width: 1px; margin-right: -1px;">&nbsp;</span></pre></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-code"></div><div class="CodeMirror-cursor" style="">&nbsp;</div><div class="CodeMirror-cursor CodeMirror-secondarycursor" style="">&nbsp;</div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px;"></div><div class="CodeMirror-gutters" style="display: none;"></div></div></div><div class="editor-statusbar"><span class="lines">0</span><span class="words">0</span><span class="cursor">0:0</span></div><div class="div_tags clearfix"><div id="divSearchTags" class="tags_con"><input type="text"></div><input type="hidden" name="txtSearchTags"></div><div id="ask2_tagRecomm_div" class="drt_tagRecomm tracking-ad" data-mod="popu_73"><span class="drt_tit">推荐标签：</span></div></div><div class="success"><div class="left_area"><input id="chk_cb" type="checkbox"><span class="wyxs">我要悬赏</span><input id="cb_num" class="cb_num" readonly="true"><span class="phib_rii"><span> 币</span></span></div><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" nodetype="cancel" class="cancel">取消</a><a href="http://blog.csdn.net/junjieguo/article/details/7678496#" nodetype="ok" class="ok">发布</a></div></div><div id="common_ask_div_sc" class="searchContainer"><div class="sTitle">可能存在类似的问题：</div><div class="sFooter"><a class="sFirstNewAsk">我想提一个新问题</a></div></div></body></html>