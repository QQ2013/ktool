
calltest:     file format elf32-i386


Disassembly of section .interp:

080480d4 <.interp>:
 80480d4:	2f                   	das    
 80480d5:	6c                   	insb   (%dx),%es:(%edi)
 80480d6:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 80480dd:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 80480e4:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .hash:

080480e8 <.hash>:
 80480e8:	01 00                	add    %eax,(%eax)
 80480ea:	00 00                	add    %al,(%eax)
 80480ec:	03 00                	add    (%eax),%eax
 80480ee:	00 00                	add    %al,(%eax)
 80480f0:	02 00                	add    (%eax),%al
	...
 80480fa:	00 00                	add    %al,(%eax)
 80480fc:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .dynsym:

08048100 <.dynsym>:
	...
 8048110:	0b 00                	or     (%eax),%eax
	...
 804811a:	00 00                	add    %al,(%eax)
 804811c:	12 00                	adc    (%eax),%al
 804811e:	00 00                	add    %al,(%eax)
 8048120:	12 00                	adc    (%eax),%al
	...
 804812a:	00 00                	add    %al,(%eax)
 804812c:	12 00                	adc    (%eax),%al
	...

Disassembly of section .dynstr:

08048130 <.dynstr>:
 8048130:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048134:	63 2e                	arpl   %bp,(%esi)
 8048136:	73 6f                	jae    80481a7 <printf@plt+0xf>
 8048138:	2e 36 00 70 72       	add    %dh,%cs:%ss:0x72(%eax)
 804813d:	69 6e 74 66 00 65 78 	imul   $0x78650066,0x74(%esi),%ebp
 8048144:	69 74 00 47 4c 49 42 	imul   $0x4342494c,0x47(%eax,%eax,1),%esi
 804814b:	43 
 804814c:	5f                   	pop    %edi
 804814d:	32 2e                	xor    (%esi),%ch
 804814f:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048152 <.gnu.version>:
 8048152:	00 00                	add    %al,(%eax)
 8048154:	02 00                	add    (%eax),%al
 8048156:	02 00                	add    (%eax),%al

Disassembly of section .gnu.version_r:

08048158 <.gnu.version_r>:
 8048158:	01 00                	add    %eax,(%eax)
 804815a:	01 00                	add    %eax,(%eax)
 804815c:	01 00                	add    %eax,(%eax)
 804815e:	00 00                	add    %al,(%eax)
 8048160:	10 00                	adc    %al,(%eax)
 8048162:	00 00                	add    %al,(%eax)
 8048164:	00 00                	add    %al,(%eax)
 8048166:	00 00                	add    %al,(%eax)
 8048168:	10 69 69             	adc    %ch,0x69(%ecx)
 804816b:	0d 00 00 02 00       	or     $0x20000,%eax
 8048170:	17                   	pop    %ss
 8048171:	00 00                	add    %al,(%eax)
 8048173:	00 00                	add    %al,(%eax)
 8048175:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.plt:

08048178 <.rel.plt>:
 8048178:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 8048179:	92                   	xchg   %eax,%edx
 804817a:	04 08                	add    $0x8,%al
 804817c:	07                   	pop    %es
 804817d:	01 00                	add    %eax,(%eax)
 804817f:	00 a8 92 04 08 07    	add    %ch,0x7080492(%eax)
 8048185:	02 00                	add    (%eax),%al
	...

Disassembly of section .plt:

08048188 <printf@plt-0x10>:
 8048188:	ff 35 9c 92 04 08    	pushl  0x804929c
 804818e:	ff 25 a0 92 04 08    	jmp    *0x80492a0
 8048194:	00 00                	add    %al,(%eax)
	...

08048198 <printf@plt>:
 8048198:	ff 25 a4 92 04 08    	jmp    *0x80492a4
 804819e:	68 00 00 00 00       	push   $0x0
 80481a3:	e9 e0 ff ff ff       	jmp    8048188 <printf@plt-0x10>

080481a8 <exit@plt>:
 80481a8:	ff 25 a8 92 04 08    	jmp    *0x80492a8
 80481ae:	68 08 00 00 00       	push   $0x8
 80481b3:	e9 d0 ff ff ff       	jmp    8048188 <printf@plt-0x10>

Disassembly of section .text:

080481b8 <_start>:
 80481b8:	6a 01                	push   $0x1
 80481ba:	68 ac 92 04 08       	push   $0x80492ac
 80481bf:	e8 d4 ff ff ff       	call   8048198 <printf@plt>
 80481c4:	83 c4 08             	add    $0x8,%esp
 80481c7:	e8 16 00 00 00       	call   80481e2 <overhere>
 80481cc:	6a 03                	push   $0x3
 80481ce:	68 ac 92 04 08       	push   $0x80492ac
 80481d3:	e8 c0 ff ff ff       	call   8048198 <printf@plt>
 80481d8:	83 c4 08             	add    $0x8,%esp
 80481db:	6a 00                	push   $0x0
 80481dd:	e8 c6 ff ff ff       	call   80481a8 <exit@plt>

080481e2 <overhere>:
 80481e2:	55                   	push   %ebp
 80481e3:	89 e5                	mov    %esp,%ebp
 80481e5:	6a 02                	push   $0x2
 80481e7:	68 ac 92 04 08       	push   $0x80492ac
 80481ec:	e8 a7 ff ff ff       	call   8048198 <printf@plt>
 80481f1:	83 c4 08             	add    $0x8,%esp
 80481f4:	89 ec                	mov    %ebp,%esp
 80481f6:	5d                   	pop    %ebp
 80481f7:	c3                   	ret    

Disassembly of section .dynamic:

080491f8 <_DYNAMIC>:
 80491f8:	01 00                	add    %eax,(%eax)
 80491fa:	00 00                	add    %al,(%eax)
 80491fc:	01 00                	add    %eax,(%eax)
 80491fe:	00 00                	add    %al,(%eax)
 8049200:	04 00                	add    $0x0,%al
 8049202:	00 00                	add    %al,(%eax)
 8049204:	e8 80 04 08 05       	call   d0c9689 <__bss_start+0x50803c9>
 8049209:	00 00                	add    %al,(%eax)
 804920b:	00 30                	add    %dh,(%eax)
 804920d:	81 04 08 06 00 00 00 	addl   $0x6,(%eax,%ecx,1)
 8049214:	00 81 04 08 0a 00    	add    %al,0xa0804(%ecx)
 804921a:	00 00                	add    %al,(%eax)
 804921c:	21 00                	and    %eax,(%eax)
 804921e:	00 00                	add    %al,(%eax)
 8049220:	0b 00                	or     (%eax),%eax
 8049222:	00 00                	add    %al,(%eax)
 8049224:	10 00                	adc    %al,(%eax)
 8049226:	00 00                	add    %al,(%eax)
 8049228:	15 00 00 00 00       	adc    $0x0,%eax
 804922d:	00 00                	add    %al,(%eax)
 804922f:	00 03                	add    %al,(%ebx)
 8049231:	00 00                	add    %al,(%eax)
 8049233:	00 98 92 04 08 02    	add    %bl,0x2080492(%eax)
 8049239:	00 00                	add    %al,(%eax)
 804923b:	00 10                	add    %dl,(%eax)
 804923d:	00 00                	add    %al,(%eax)
 804923f:	00 14 00             	add    %dl,(%eax,%eax,1)
 8049242:	00 00                	add    %al,(%eax)
 8049244:	11 00                	adc    %eax,(%eax)
 8049246:	00 00                	add    %al,(%eax)
 8049248:	17                   	pop    %ss
 8049249:	00 00                	add    %al,(%eax)
 804924b:	00 78 81             	add    %bh,-0x7f(%eax)
 804924e:	04 08                	add    $0x8,%al
 8049250:	fe                   	(bad)  
 8049251:	ff                   	(bad)  
 8049252:	ff 6f 58             	ljmp   *0x58(%edi)
 8049255:	81 04 08 ff ff ff 6f 	addl   $0x6fffffff,(%eax,%ecx,1)
 804925c:	01 00                	add    %eax,(%eax)
 804925e:	00 00                	add    %al,(%eax)
 8049260:	f0 ff                	lock (bad) 
 8049262:	ff 6f 52             	ljmp   *0x52(%edi)
 8049265:	81 04 08 00 00 00 00 	addl   $0x0,(%eax,%ecx,1)
	...

Disassembly of section .got.plt:

08049298 <_GLOBAL_OFFSET_TABLE_>:
 8049298:	f8                   	clc    
 8049299:	91                   	xchg   %eax,%ecx
 804929a:	04 08                	add    $0x8,%al
	...
 80492a4:	9e                   	sahf   
 80492a5:	81 04 08 ae 81 04 08 	addl   $0x80481ae,(%eax,%ecx,1)

Disassembly of section .data:

080492ac <output>:
 80492ac:	54                   	push   %esp
 80492ad:	68 69 73 20 69       	push   $0x69207369
 80492b2:	73 20                	jae    80492d4 <__bss_start+0x14>
 80492b4:	73 65                	jae    804931b <__bss_start+0x5b>
 80492b6:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
 80492ba:	6e                   	outsb  %ds:(%esi),(%dx)
 80492bb:	20                   	.byte 0x20
 80492bc:	25                   	.byte 0x25
 80492bd:	64 0a 00             	or     %fs:(%eax),%al

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	b8 81 04 08 40       	mov    $0x40080481,%eax
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	4b                   	dec    %ebx
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 00                	add    %al,(%eax)
   7:	00 00                	add    %al,(%eax)
   9:	00 04 01             	add    %al,(%ecx,%eax,1)
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	b8 81 04 08 f8       	mov    $0xf8080481,%eax
  15:	81 04 08 63 61 6c 6c 	addl   $0x6c6c6163,(%eax,%ecx,1)
  1c:	74 65                	je     83 <printf@plt-0x8048115>
  1e:	73 74                	jae    94 <printf@plt-0x8048104>
  20:	2e 73 00             	jae,pn 23 <printf@plt-0x8048175>
  23:	2f                   	das    
  24:	73 74                	jae    9a <printf@plt-0x80480fe>
  26:	6f                   	outsl  %ds:(%esi),(%dx)
  27:	72 65                	jb     8e <printf@plt-0x804810a>
  29:	31 2f                	xor    %ebp,(%edi)
  2b:	63 6f 64             	arpl   %bp,0x64(%edi)
  2e:	65                   	gs
  2f:	2f                   	das    
  30:	63 6f 64             	arpl   %bp,0x64(%edi)
  33:	65                   	gs
  34:	2f                   	das    
  35:	61                   	popa   
  36:	73 2f                	jae    67 <printf@plt-0x8048131>
  38:	36 00 47 4e          	add    %al,%ss:0x4e(%edi)
  3c:	55                   	push   %ebp
  3d:	20 41 53             	and    %al,0x53(%ecx)
  40:	20 32                	and    %dh,(%edx)
  42:	2e 32 30             	xor    %cs:(%eax),%dh
  45:	2e                   	cs
  46:	35 31 2e 30 2e       	xor    $0x2e302e31,%eax
  4b:	32 00                	xor    (%eax),%al
  4d:	01                   	.byte 0x1
  4e:	80                   	.byte 0x80

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	00 10                	add    %dl,(%eax)
   4:	06                   	push   %es
   5:	11 01                	adc    %eax,(%ecx)
   7:	12 01                	adc    (%ecx),%al
   9:	03 08                	add    (%eax),%ecx
   b:	1b 08                	sbb    (%eax),%ecx
   d:	25 08 13 05 00       	and    $0x51308,%eax
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	47                   	inc    %edi
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 21                	add    %ah,(%ecx)
   7:	00 00                	add    %al,(%eax)
   9:	00 01                	add    %al,(%ecx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	00 63 61             	add    %ah,0x61(%ebx)
  1e:	6c                   	insb   (%dx),%es:(%edi)
  1f:	6c                   	insb   (%dx),%es:(%edi)
  20:	74 65                	je     87 <printf@plt-0x8048111>
  22:	73 74                	jae    98 <printf@plt-0x8048100>
  24:	2e 73 00             	jae,pn 27 <printf@plt-0x8048171>
  27:	00 00                	add    %al,(%eax)
  29:	00 00                	add    %al,(%eax)
  2b:	00 05 02 b8 81 04    	add    %al,0x481b802
  31:	08 19                	or     %bl,(%ecx)
  33:	2f                   	das    
  34:	59                   	pop    %ecx
  35:	59                   	pop    %ecx
  36:	3d 59 2f 59 59       	cmp    $0x59592f59,%eax
  3b:	3d 2f 5a 21 2f       	cmp    $0x2f215a2f,%eax
  40:	2f                   	das    
  41:	59                   	pop    %ecx
  42:	59                   	pop    %ecx
  43:	3d 2f 21 02 01       	cmp    $0x102212f,%eax
  48:	00 01                	add    %al,(%ecx)
  4a:	01                   	.byte 0x1
